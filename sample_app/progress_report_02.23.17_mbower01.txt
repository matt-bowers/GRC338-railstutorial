commit 52af276733b9bb21d4f7002ea31a16f3fae1d9af
Author: Matt Bowers <matttttb@gmail.com>
Date:   Thu Feb 23 20:27:12 2017 -0800

    Finish static pages

diff --git a/sample_app/app/views/static_pages/contact.html.erb b/sample_app/app/views/static_pages/contact.html.erb
new file mode 100644
index 0000000..9eae06f
--- /dev/null
+++ b/sample_app/app/views/static_pages/contact.html.erb
@@ -0,0 +1,6 @@
+<% provide(:title, "Contact") %>
+<h1>Contact</h1>
+<p>
+  Contact the Ruby on Rails Tutorial about the sample app at the
+  <a href="http://www.railstutorial.org/contact">contact page</a>.
+</p>
\ No newline at end of file
diff --git a/sample_app/config/routes.rb b/sample_app/config/routes.rb
index ddb69f8..b979fef 100644
--- a/sample_app/config/routes.rb
+++ b/sample_app/config/routes.rb
@@ -1,6 +1,8 @@
 Rails.application.routes.draw do
+  get 'static_pages/contact'
+
   get 'static_pages/home'
   get 'static_pages/help'
   get 'static_pages/about'
-  root 'application#hello'
+  root 'static_pages#home'
 end
\ No newline at end of file

commit 7561ea7e774a6e496707fb9684bc47efce5b34f7
Author: Matt Bowers <matttttb@gmail.com>
Date:   Thu Feb 23 20:04:31 2017 -0800

    Added dynamic page titles

diff --git a/sample_app/app/views/layouts/application.html.erb b/sample_app/app/views/layouts/application.html.erb
index f4949f6..6a1eaa1 100644
--- a/sample_app/app/views/layouts/application.html.erb
+++ b/sample_app/app/views/layouts/application.html.erb
@@ -1,14 +1,14 @@
 <!DOCTYPE html>
 <html>
   <head>
-    <title>SampleApp</title>
+    <title><%= yield(:title) %> | Ruby on Rails Tutorial Sample App</title>
     <%= csrf_meta_tags %>
-
-    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
+    <%= stylesheet_link_tag    'application', media: 'all',
+                                              'data-turbolinks-track': 'reload' %>
     <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
   </head>
 
   <body>
     <%= yield %>
   </body>
-</html>
+</html>
\ No newline at end of file
diff --git a/sample_app/app/views/static_pages/about.html.erb b/sample_app/app/views/static_pages/about.html.erb
index aaad34b..0acdb46 100644
--- a/sample_app/app/views/static_pages/about.html.erb
+++ b/sample_app/app/views/static_pages/about.html.erb
@@ -1,2 +1,11 @@
+<% provide(:title, "About") %>
 <h1>About</h1>
-<p>As you know, I'm a pretty awesome person. Ahh yeah.</p>
\ No newline at end of file
+<p>
+  The <a href="http://www.railstutorial.org/"><em>Ruby on Rails
+  Tutorial</em></a> is a
+  <a href="http://www.railstutorial.org/book">book</a> and
+  <a href="http://screencasts.railstutorial.org/">screencast series</a>
+  to teach web development with
+  <a href="http://rubyonrails.org/">Ruby on Rails</a>.
+  This is the sample application for the tutorial.
+</p>
\ No newline at end of file
diff --git a/sample_app/app/views/static_pages/help.html.erb b/sample_app/app/views/static_pages/help.html.erb
index f59d690..e8819f1 100644
--- a/sample_app/app/views/static_pages/help.html.erb
+++ b/sample_app/app/views/static_pages/help.html.erb
@@ -1,2 +1,9 @@
+<% provide(:title, "Help") %>
 <h1>Help</h1>
-<p>Need help? Bummer.</p>
\ No newline at end of file
+<p>
+  Get help on the Ruby on Rails Tutorial at the
+  <a href="http://www.railstutorial.org/help">Rails Tutorial help section</a>.
+  To get help on this sample app, see the
+  <a href="http://www.railstutorial.org/book"><em>Ruby on Rails Tutorial</em>
+  book</a>.
+</p>
\ No newline at end of file
diff --git a/sample_app/app/views/static_pages/home.html.erb b/sample_app/app/views/static_pages/home.html.erb
index 48b63a9..7a569d1 100644
--- a/sample_app/app/views/static_pages/home.html.erb
+++ b/sample_app/app/views/static_pages/home.html.erb
@@ -1,2 +1,7 @@
+<% provide(:title, "Home") %>
 <h1>Sample App</h1>
-<p>This is the home page for the Ruby on Rails Tutorial sample application yo!</p>
\ No newline at end of file
+<p>
+  This is the home page for the
+  <a href="http://www.railstutorial.org/">Ruby on Rails Tutorial</a>
+  sample application.
+</p>
\ No newline at end of file
diff --git a/sample_app/test/controllers/static_pages_controller_test.rb b/sample_app/test/controllers/static_pages_controller_test.rb
index 0e1eab9..f8f0ef1 100644
--- a/sample_app/test/controllers/static_pages_controller_test.rb
+++ b/sample_app/test/controllers/static_pages_controller_test.rb
@@ -1,19 +1,26 @@
 require 'test_helper'
 
 class StaticPagesControllerTest < ActionDispatch::IntegrationTest
+
+  def setup
+    @base_title = "Ruby on Rails Tutorial Sample App"
+  end
+
   test "should get home" do
     get static_pages_home_url
     assert_response :success
+    assert_select "title", "Home | #{@base_title}"
   end
 
   test "should get help" do
     get static_pages_help_url
     assert_response :success
+    assert_select "title", "Help | #{@base_title}"
   end
 
   test "should get about" do
     get static_pages_about_url
     assert_response :success
+    assert_select "title", "About | #{@base_title}"
   end
-
-end
+end
\ No newline at end of file

commit decec2db42698db621ee78e0375d13a08d319b47
Author: Matt Bowers <matttttb@gmail.com>
Date:   Thu Feb 23 19:55:08 2017 -0800

    Added the about static page and view

diff --git a/sample_app/app/controllers/static_pages_controller.rb b/sample_app/app/controllers/static_pages_controller.rb
index c76b925..19f79a9 100644
--- a/sample_app/app/controllers/static_pages_controller.rb
+++ b/sample_app/app/controllers/static_pages_controller.rb
@@ -4,4 +4,7 @@ class StaticPagesController < ApplicationController
 
   def help
   end
+
+  def about
+  end
 end
diff --git a/sample_app/app/views/static_pages/about.html.erb b/sample_app/app/views/static_pages/about.html.erb
new file mode 100644
index 0000000..aaad34b
--- /dev/null
+++ b/sample_app/app/views/static_pages/about.html.erb
@@ -0,0 +1,2 @@
+<h1>About</h1>
+<p>As you know, I'm a pretty awesome person. Ahh yeah.</p>
\ No newline at end of file
diff --git a/sample_app/app/views/static_pages/help.html.erb b/sample_app/app/views/static_pages/help.html.erb
index 61896f5..f59d690 100644
--- a/sample_app/app/views/static_pages/help.html.erb
+++ b/sample_app/app/views/static_pages/help.html.erb
@@ -1,2 +1,2 @@
-<h1>StaticPages#help</h1>
-<p>Find me in app/views/static_pages/help.html.erb</p>
+<h1>Help</h1>
+<p>Need help? Bummer.</p>
\ No newline at end of file
diff --git a/sample_app/app/views/static_pages/home.html.erb b/sample_app/app/views/static_pages/home.html.erb
index af94c7f..48b63a9 100644
--- a/sample_app/app/views/static_pages/home.html.erb
+++ b/sample_app/app/views/static_pages/home.html.erb
@@ -1,2 +1,2 @@
-<h1>StaticPages#home</h1>
-<p>Find me in app/views/static_pages/home.html.erb</p>
+<h1>Sample App</h1>
+<p>This is the home page for the Ruby on Rails Tutorial sample application yo!</p>
\ No newline at end of file
diff --git a/sample_app/config/routes.rb b/sample_app/config/routes.rb
index 70f7a21..ddb69f8 100644
--- a/sample_app/config/routes.rb
+++ b/sample_app/config/routes.rb
@@ -1,7 +1,6 @@
 Rails.application.routes.draw do
   get 'static_pages/home'
-
   get 'static_pages/help'
-
+  get 'static_pages/about'
   root 'application#hello'
 end
\ No newline at end of file
diff --git a/sample_app/test/controllers/static_pages_controller_test.rb b/sample_app/test/controllers/static_pages_controller_test.rb
index e9a0692..0e1eab9 100644
--- a/sample_app/test/controllers/static_pages_controller_test.rb
+++ b/sample_app/test/controllers/static_pages_controller_test.rb
@@ -11,4 +11,9 @@ class StaticPagesControllerTest < ActionDispatch::IntegrationTest
     assert_response :success
   end
 
+  test "should get about" do
+    get static_pages_about_url
+    assert_response :success
+  end
+
 end

commit 83649d2279ba4ad6f72f68fbb1fb188d701b3996
Author: Matt Bowers <matttttb@gmail.com>
Date:   Thu Feb 23 19:41:10 2017 -0800

    Added static pages controller

diff --git a/sample_app/app/assets/javascripts/static_pages.coffee b/sample_app/app/assets/javascripts/static_pages.coffee
new file mode 100644
index 0000000..24f83d1
--- /dev/null
+++ b/sample_app/app/assets/javascripts/static_pages.coffee
@@ -0,0 +1,3 @@
+# Place all the behaviors and hooks related to the matching controller here.
+# All this logic will automatically be available in application.js.
+# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/sample_app/app/assets/stylesheets/static_pages.scss b/sample_app/app/assets/stylesheets/static_pages.scss
new file mode 100644
index 0000000..d55836c
--- /dev/null
+++ b/sample_app/app/assets/stylesheets/static_pages.scss
@@ -0,0 +1,3 @@
+// Place all the styles related to the StaticPages controller here.
+// They will automatically be included in application.css.
+// You can use Sass (SCSS) here: http://sass-lang.com/
diff --git a/sample_app/app/controllers/static_pages_controller.rb b/sample_app/app/controllers/static_pages_controller.rb
new file mode 100644
index 0000000..c76b925
--- /dev/null
+++ b/sample_app/app/controllers/static_pages_controller.rb
@@ -0,0 +1,7 @@
+class StaticPagesController < ApplicationController
+  def home
+  end
+
+  def help
+  end
+end
diff --git a/sample_app/app/helpers/static_pages_helper.rb b/sample_app/app/helpers/static_pages_helper.rb
new file mode 100644
index 0000000..2d63e79
--- /dev/null
+++ b/sample_app/app/helpers/static_pages_helper.rb
@@ -0,0 +1,2 @@
+module StaticPagesHelper
+end
diff --git a/sample_app/app/views/static_pages/help.html.erb b/sample_app/app/views/static_pages/help.html.erb
new file mode 100644
index 0000000..61896f5
--- /dev/null
+++ b/sample_app/app/views/static_pages/help.html.erb
@@ -0,0 +1,2 @@
+<h1>StaticPages#help</h1>
+<p>Find me in app/views/static_pages/help.html.erb</p>
diff --git a/sample_app/app/views/static_pages/home.html.erb b/sample_app/app/views/static_pages/home.html.erb
new file mode 100644
index 0000000..af94c7f
--- /dev/null
+++ b/sample_app/app/views/static_pages/home.html.erb
@@ -0,0 +1,2 @@
+<h1>StaticPages#home</h1>
+<p>Find me in app/views/static_pages/home.html.erb</p>
diff --git a/sample_app/config/routes.rb b/sample_app/config/routes.rb
index 0b6dc03..70f7a21 100644
--- a/sample_app/config/routes.rb
+++ b/sample_app/config/routes.rb
@@ -1,3 +1,7 @@
 Rails.application.routes.draw do
+  get 'static_pages/home'
+
+  get 'static_pages/help'
+
   root 'application#hello'
 end
\ No newline at end of file
diff --git a/sample_app/test/controllers/static_pages_controller_test.rb b/sample_app/test/controllers/static_pages_controller_test.rb
new file mode 100644
index 0000000..e9a0692
--- /dev/null
+++ b/sample_app/test/controllers/static_pages_controller_test.rb
@@ -0,0 +1,14 @@
+require 'test_helper'
+
+class StaticPagesControllerTest < ActionDispatch::IntegrationTest
+  test "should get home" do
+    get static_pages_home_url
+    assert_response :success
+  end
+
+  test "should get help" do
+    get static_pages_help_url
+    assert_response :success
+  end
+
+end

commit e6eefdf7291722bd14bd66ee333eaa247b34b88b
Author: Matt Bowers <matttttb@gmail.com>
Date:   Thu Feb 23 19:38:04 2017 -0800

    Updated

diff --git a/sample_app/app/controllers/application_controller.rb b/sample_app/app/controllers/application_controller.rb
index 1c07694..2d61135 100644
--- a/sample_app/app/controllers/application_controller.rb
+++ b/sample_app/app/controllers/application_controller.rb
@@ -1,3 +1,7 @@
 class ApplicationController < ActionController::Base
   protect_from_forgery with: :exception
-end
+
+  def hello
+    render html: "Hello world!"
+  end
+end
\ No newline at end of file
diff --git a/sample_app/config/routes.rb b/sample_app/config/routes.rb
index 787824f..0b6dc03 100644
--- a/sample_app/config/routes.rb
+++ b/sample_app/config/routes.rb
@@ -1,3 +1,3 @@
 Rails.application.routes.draw do
-  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
-end
+  root 'application#hello'
+end
\ No newline at end of file

commit ed1894e4b2275f9583432695b748851f11e70f47
Author: Matt Bowers <matttttb@gmail.com>
Date:   Fri Feb 10 11:56:44 2017 -0800

    Improve the README

diff --git a/sample_app/README.md b/sample_app/README.md
index 7db80e4..e0ceddd 100644
--- a/sample_app/README.md
+++ b/sample_app/README.md
@@ -1,24 +1,41 @@
-# README
+# Ruby on Rails Tutorial sample application
 
-This README would normally document whatever steps are necessary to get the
-application up and running.
+This is the sample application for
+[*Ruby on Rails Tutorial:
+Learn Web Development with Rails*](http://www.railstutorial.org/)
+by [Michael Hartl](http://www.michaelhartl.com/).
 
-Things you may want to cover:
+## License
 
-* Ruby version
+All source code in the [Ruby on Rails Tutorial](http://railstutorial.org/)
+is available jointly under the MIT License and the Beerware License. See
+[LICENSE.md](LICENSE.md) for details.
 
-* System dependencies
+## Getting started
 
-* Configuration
+To get started with the app, clone the repo and then install the needed gems:
 
-* Database creation
+```
+$ bundle install --without production
+```
 
-* Database initialization
+Next, migrate the database:
 
-* How to run the test suite
+```
+$ rails db:migrate
+```
 
-* Services (job queues, cache servers, search engines, etc.)
+Finally, run the test suite to verify that everything is working correctly:
 
-* Deployment instructions
+```
+$ rails test
+```
 
-* ...
+If the test suite passes, you'll be ready to run the app in a local server:
+
+```
+$ rails server
+```
+
+For more information, see the
+[*Ruby on Rails Tutorial* book](http://www.railstutorial.org/book).
\ No newline at end of file

commit e47e3ea2bbbd92d36e869df274980a0a3f2bad21
Author: Matt Bowers <matttttb@gmail.com>
Date:   Fri Feb 10 11:53:48 2017 -0800

    Intialize repository with hello_app and sample_app

diff --git a/hello_app/.gitignore b/hello_app/.gitignore
new file mode 100644
index 0000000..bab620d
--- /dev/null
+++ b/hello_app/.gitignore
@@ -0,0 +1,21 @@
+# See https://help.github.com/articles/ignoring-files for more about ignoring files.
+#
+# If you find yourself ignoring temporary files generated by your text editor
+# or operating system, you probably want to add a global ignore instead:
+#   git config --global core.excludesfile '~/.gitignore_global'
+
+# Ignore bundler config.
+/.bundle
+
+# Ignore the default SQLite database.
+/db/*.sqlite3
+/db/*.sqlite3-journal
+
+# Ignore all logfiles and tempfiles.
+/log/*
+/tmp/*
+!/log/.keep
+!/tmp/.keep
+
+# Ignore Byebug command history file.
+.byebug_history
diff --git a/hello_app/Gemfile b/hello_app/Gemfile
new file mode 100644
index 0000000..8d7b3eb
--- /dev/null
+++ b/hello_app/Gemfile
@@ -0,0 +1,53 @@
+source 'https://rubygems.org'
+
+git_source(:github) do |repo_name|
+  repo_name = "#{repo_name}/#{repo_name}" unless repo_name.include?("/")
+  "https://github.com/#{repo_name}.git"
+end
+
+
+# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
+gem 'rails', '~> 5.0.1'
+# Use sqlite3 as the database for Active Record
+gem 'sqlite3'
+# Use Puma as the app server
+gem 'puma', '~> 3.0'
+# Use SCSS for stylesheets
+gem 'sass-rails', '~> 5.0'
+# Use Uglifier as compressor for JavaScript assets
+gem 'uglifier', '>= 1.3.0'
+# Use CoffeeScript for .coffee assets and views
+gem 'coffee-rails', '~> 4.2'
+# See https://github.com/rails/execjs#readme for more supported runtimes
+# gem 'therubyracer', platforms: :ruby
+
+# Use jquery as the JavaScript library
+gem 'jquery-rails'
+# Turbolinks makes navigating your web application faster. Read more: https://github.com/turbolinks/turbolinks
+gem 'turbolinks', '~> 5'
+# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
+gem 'jbuilder', '~> 2.5'
+# Use Redis adapter to run Action Cable in production
+# gem 'redis', '~> 3.0'
+# Use ActiveModel has_secure_password
+# gem 'bcrypt', '~> 3.1.7'
+
+# Use Capistrano for deployment
+# gem 'capistrano-rails', group: :development
+
+group :development, :test do
+  # Call 'byebug' anywhere in the code to stop execution and get a debugger console
+  gem 'byebug', platform: :mri
+end
+
+group :development do
+  # Access an IRB console on exception pages or by using <%= console %> anywhere in the code.
+  gem 'web-console', '>= 3.3.0'
+  gem 'listen', '~> 3.0.5'
+  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
+  gem 'spring'
+  gem 'spring-watcher-listen', '~> 2.0.0'
+end
+
+# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
+gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
diff --git a/hello_app/Gemfile.lock b/hello_app/Gemfile.lock
new file mode 100644
index 0000000..c2cdeb3
--- /dev/null
+++ b/hello_app/Gemfile.lock
@@ -0,0 +1,174 @@
+GEM
+  remote: https://rubygems.org/
+  specs:
+    actioncable (5.0.1)
+      actionpack (= 5.0.1)
+      nio4r (~> 1.2)
+      websocket-driver (~> 0.6.1)
+    actionmailer (5.0.1)
+      actionpack (= 5.0.1)
+      actionview (= 5.0.1)
+      activejob (= 5.0.1)
+      mail (~> 2.5, >= 2.5.4)
+      rails-dom-testing (~> 2.0)
+    actionpack (5.0.1)
+      actionview (= 5.0.1)
+      activesupport (= 5.0.1)
+      rack (~> 2.0)
+      rack-test (~> 0.6.3)
+      rails-dom-testing (~> 2.0)
+      rails-html-sanitizer (~> 1.0, >= 1.0.2)
+    actionview (5.0.1)
+      activesupport (= 5.0.1)
+      builder (~> 3.1)
+      erubis (~> 2.7.0)
+      rails-dom-testing (~> 2.0)
+      rails-html-sanitizer (~> 1.0, >= 1.0.2)
+    activejob (5.0.1)
+      activesupport (= 5.0.1)
+      globalid (>= 0.3.6)
+    activemodel (5.0.1)
+      activesupport (= 5.0.1)
+    activerecord (5.0.1)
+      activemodel (= 5.0.1)
+      activesupport (= 5.0.1)
+      arel (~> 7.0)
+    activesupport (5.0.1)
+      concurrent-ruby (~> 1.0, >= 1.0.2)
+      i18n (~> 0.7)
+      minitest (~> 5.1)
+      tzinfo (~> 1.1)
+    arel (7.1.4)
+    builder (3.2.3)
+    byebug (9.0.6)
+    coffee-rails (4.2.1)
+      coffee-script (>= 2.2.0)
+      railties (>= 4.0.0, < 5.2.x)
+    coffee-script (2.4.1)
+      coffee-script-source
+      execjs
+    coffee-script-source (1.12.2)
+    concurrent-ruby (1.0.4)
+    debug_inspector (0.0.2)
+    erubis (2.7.0)
+    execjs (2.7.0)
+    ffi (1.9.17)
+    globalid (0.3.7)
+      activesupport (>= 4.1.0)
+    i18n (0.8.0)
+    jbuilder (2.6.1)
+      activesupport (>= 3.0.0, < 5.1)
+      multi_json (~> 1.2)
+    jquery-rails (4.2.2)
+      rails-dom-testing (>= 1, < 3)
+      railties (>= 4.2.0)
+      thor (>= 0.14, < 2.0)
+    listen (3.0.8)
+      rb-fsevent (~> 0.9, >= 0.9.4)
+      rb-inotify (~> 0.9, >= 0.9.7)
+    loofah (2.0.3)
+      nokogiri (>= 1.5.9)
+    mail (2.6.4)
+      mime-types (>= 1.16, < 4)
+    method_source (0.8.2)
+    mime-types (3.1)
+      mime-types-data (~> 3.2015)
+    mime-types-data (3.2016.0521)
+    mini_portile2 (2.1.0)
+    minitest (5.10.1)
+    multi_json (1.12.1)
+    nio4r (1.2.1)
+    nokogiri (1.7.0.1)
+      mini_portile2 (~> 2.1.0)
+    puma (3.7.0)
+    rack (2.0.1)
+    rack-test (0.6.3)
+      rack (>= 1.0)
+    rails (5.0.1)
+      actioncable (= 5.0.1)
+      actionmailer (= 5.0.1)
+      actionpack (= 5.0.1)
+      actionview (= 5.0.1)
+      activejob (= 5.0.1)
+      activemodel (= 5.0.1)
+      activerecord (= 5.0.1)
+      activesupport (= 5.0.1)
+      bundler (>= 1.3.0, < 2.0)
+      railties (= 5.0.1)
+      sprockets-rails (>= 2.0.0)
+    rails-dom-testing (2.0.2)
+      activesupport (>= 4.2.0, < 6.0)
+      nokogiri (~> 1.6)
+    rails-html-sanitizer (1.0.3)
+      loofah (~> 2.0)
+    railties (5.0.1)
+      actionpack (= 5.0.1)
+      activesupport (= 5.0.1)
+      method_source
+      rake (>= 0.8.7)
+      thor (>= 0.18.1, < 2.0)
+    rake (12.0.0)
+    rb-fsevent (0.9.8)
+    rb-inotify (0.9.8)
+      ffi (>= 0.5.0)
+    sass (3.4.23)
+    sass-rails (5.0.6)
+      railties (>= 4.0.0, < 6)
+      sass (~> 3.1)
+      sprockets (>= 2.8, < 4.0)
+      sprockets-rails (>= 2.0, < 4.0)
+      tilt (>= 1.1, < 3)
+    spring (2.0.1)
+      activesupport (>= 4.2)
+    spring-watcher-listen (2.0.1)
+      listen (>= 2.7, < 4.0)
+      spring (>= 1.2, < 3.0)
+    sprockets (3.7.1)
+      concurrent-ruby (~> 1.0)
+      rack (> 1, < 3)
+    sprockets-rails (3.2.0)
+      actionpack (>= 4.0)
+      activesupport (>= 4.0)
+      sprockets (>= 3.0.0)
+    sqlite3 (1.3.13)
+    thor (0.19.4)
+    thread_safe (0.3.5)
+    tilt (2.0.6)
+    turbolinks (5.0.1)
+      turbolinks-source (~> 5)
+    turbolinks-source (5.0.0)
+    tzinfo (1.2.2)
+      thread_safe (~> 0.1)
+    uglifier (3.0.4)
+      execjs (>= 0.3.0, < 3)
+    web-console (3.4.0)
+      actionview (>= 5.0)
+      activemodel (>= 5.0)
+      debug_inspector
+      railties (>= 5.0)
+    websocket-driver (0.6.5)
+      websocket-extensions (>= 0.1.0)
+    websocket-extensions (0.1.2)
+
+PLATFORMS
+  ruby
+
+DEPENDENCIES
+  byebug
+  coffee-rails (~> 4.2)
+  jbuilder (~> 2.5)
+  jquery-rails
+  listen (~> 3.0.5)
+  puma (~> 3.0)
+  rails (~> 5.0.1)
+  sass-rails (~> 5.0)
+  spring
+  spring-watcher-listen (~> 2.0.0)
+  sqlite3
+  turbolinks (~> 5)
+  tzinfo-data
+  uglifier (>= 1.3.0)
+  web-console (>= 3.3.0)
+
+BUNDLED WITH
+   1.14.3
diff --git a/hello_app/README.md b/hello_app/README.md
new file mode 100644
index 0000000..7db80e4
--- /dev/null
+++ b/hello_app/README.md
@@ -0,0 +1,24 @@
+# README
+
+This README would normally document whatever steps are necessary to get the
+application up and running.
+
+Things you may want to cover:
+
+* Ruby version
+
+* System dependencies
+
+* Configuration
+
+* Database creation
+
+* Database initialization
+
+* How to run the test suite
+
+* Services (job queues, cache servers, search engines, etc.)
+
+* Deployment instructions
+
+* ...
diff --git a/hello_app/Rakefile b/hello_app/Rakefile
new file mode 100644
index 0000000..e85f913
--- /dev/null
+++ b/hello_app/Rakefile
@@ -0,0 +1,6 @@
+# Add your own tasks in files placed in lib/tasks ending in .rake,
+# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.
+
+require_relative 'config/application'
+
+Rails.application.load_tasks
diff --git a/hello_app/app/assets/config/manifest.js b/hello_app/app/assets/config/manifest.js
new file mode 100644
index 0000000..b16e53d
--- /dev/null
+++ b/hello_app/app/assets/config/manifest.js
@@ -0,0 +1,3 @@
+//= link_tree ../images
+//= link_directory ../javascripts .js
+//= link_directory ../stylesheets .css
diff --git a/hello_app/app/assets/images/.keep b/hello_app/app/assets/images/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/app/assets/javascripts/application.js b/hello_app/app/assets/javascripts/application.js
new file mode 100644
index 0000000..b12018d
--- /dev/null
+++ b/hello_app/app/assets/javascripts/application.js
@@ -0,0 +1,16 @@
+// This is a manifest file that'll be compiled into application.js, which will include all the files
+// listed below.
+//
+// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
+// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
+//
+// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
+// compiled file. JavaScript code in this file should be added after the last require_* statement.
+//
+// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
+// about supported directives.
+//
+//= require jquery
+//= require jquery_ujs
+//= require turbolinks
+//= require_tree .
diff --git a/hello_app/app/assets/javascripts/cable.js b/hello_app/app/assets/javascripts/cable.js
new file mode 100644
index 0000000..71ee1e6
--- /dev/null
+++ b/hello_app/app/assets/javascripts/cable.js
@@ -0,0 +1,13 @@
+// Action Cable provides the framework to deal with WebSockets in Rails.
+// You can generate new channels where WebSocket features live using the rails generate channel command.
+//
+//= require action_cable
+//= require_self
+//= require_tree ./channels
+
+(function() {
+  this.App || (this.App = {});
+
+  App.cable = ActionCable.createConsumer();
+
+}).call(this);
diff --git a/hello_app/app/assets/javascripts/channels/.keep b/hello_app/app/assets/javascripts/channels/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/app/assets/javascripts/microposts.coffee b/hello_app/app/assets/javascripts/microposts.coffee
new file mode 100644
index 0000000..24f83d1
--- /dev/null
+++ b/hello_app/app/assets/javascripts/microposts.coffee
@@ -0,0 +1,3 @@
+# Place all the behaviors and hooks related to the matching controller here.
+# All this logic will automatically be available in application.js.
+# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/hello_app/app/assets/javascripts/users.coffee b/hello_app/app/assets/javascripts/users.coffee
new file mode 100644
index 0000000..24f83d1
--- /dev/null
+++ b/hello_app/app/assets/javascripts/users.coffee
@@ -0,0 +1,3 @@
+# Place all the behaviors and hooks related to the matching controller here.
+# All this logic will automatically be available in application.js.
+# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/hello_app/app/assets/stylesheets/application.css b/hello_app/app/assets/stylesheets/application.css
new file mode 100644
index 0000000..0ebd7fe
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/application.css
@@ -0,0 +1,15 @@
+/*
+ * This is a manifest file that'll be compiled into application.css, which will include all the files
+ * listed below.
+ *
+ * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
+ * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
+ *
+ * You're free to add application-wide styles to this file and they'll appear at the bottom of the
+ * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
+ * files in this directory. Styles in this file should be added after the last require_* statement.
+ * It is generally better to create a new file per style scope.
+ *
+ *= require_tree .
+ *= require_self
+ */
diff --git a/hello_app/app/assets/stylesheets/microposts.css b/hello_app/app/assets/stylesheets/microposts.css
new file mode 100644
index 0000000..e5025d6
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/microposts.css
@@ -0,0 +1,2 @@
+
+/*# sourceMappingURL=microposts.css.map */
\ No newline at end of file
diff --git a/hello_app/app/assets/stylesheets/microposts.css.map b/hello_app/app/assets/stylesheets/microposts.css.map
new file mode 100644
index 0000000..8c192ea
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/microposts.css.map
@@ -0,0 +1,9 @@
+{
+  "version": 3,
+  "file": "microposts.css",
+  "sources": [
+    "microposts.scss"
+  ],
+  "mappings": "",
+  "names": []
+}
\ No newline at end of file
diff --git a/hello_app/app/assets/stylesheets/microposts.scss b/hello_app/app/assets/stylesheets/microposts.scss
new file mode 100644
index 0000000..c14d62c
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/microposts.scss
@@ -0,0 +1,3 @@
+// Place all the styles related to the Microposts controller here.
+// They will automatically be included in application.css.
+// You can use Sass (SCSS) here: http://sass-lang.com/
diff --git a/hello_app/app/assets/stylesheets/scaffolds.css b/hello_app/app/assets/stylesheets/scaffolds.css
new file mode 100644
index 0000000..338b0b5
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/scaffolds.css
@@ -0,0 +1,85 @@
+/* line 1, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+body {
+  background-color: #fff;
+  color: #333;
+  font-family: verdana, arial, helvetica, sans-serif;
+  font-size: 13px;
+  line-height: 18px;
+  margin: 33px; }
+
+/* line 10, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+p, ol, ul, td {
+  font-family: verdana, arial, helvetica, sans-serif;
+  font-size: 13px;
+  line-height: 18px;
+  margin: 33px; }
+
+/* line 17, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+pre {
+  background-color: #eee;
+  padding: 10px;
+  font-size: 11px; }
+
+/* line 23, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+a {
+  color: #000; }
+  /* line 26, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+  a:visited {
+    color: #666; }
+  /* line 30, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+  a:hover {
+    color: #fff;
+    background-color: #000; }
+
+/* line 36, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+th {
+  padding-bottom: 5px; }
+
+/* line 40, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+td {
+  padding-bottom: 7px;
+  padding-left: 5px;
+  padding-right: 5px; }
+
+/* line 47, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+div.field, div.actions {
+  margin-bottom: 10px; }
+
+/* line 52, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+#notice {
+  color: green; }
+
+/* line 56, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+.field_with_errors {
+  padding: 2px;
+  background-color: red;
+  display: table; }
+
+/* line 62, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+#error_explanation {
+  width: 450px;
+  border: 2px solid red;
+  padding: 7px;
+  padding-bottom: 0;
+  margin-bottom: 20px;
+  background-color: #f0f0f0; }
+  /* line 70, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+  #error_explanation h2 {
+    text-align: left;
+    font-weight: bold;
+    padding: 5px 5px 5px 15px;
+    font-size: 12px;
+    margin: -7px;
+    margin-bottom: 0;
+    background-color: #c00;
+    color: #fff; }
+  /* line 81, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+  #error_explanation ul li {
+    font-size: 12px;
+    list-style: square; }
+
+/* line 87, /Users/Matt/Sites/GRC338/rubyworkspace/hello_app/app/assets/stylesheets/scaffolds.scss */
+label {
+  display: block; }
+
+/*# sourceMappingURL=scaffolds.css.map */
\ No newline at end of file
diff --git a/hello_app/app/assets/stylesheets/scaffolds.css.map b/hello_app/app/assets/stylesheets/scaffolds.css.map
new file mode 100644
index 0000000..d5972f2
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/scaffolds.css.map
@@ -0,0 +1,9 @@
+{
+  "version": 3,
+  "file": "scaffolds.css",
+  "sources": [
+    "scaffolds.scss"
+  ],
+  "mappings": ";AAAA,AAAA,IAAI,CAAC;EACH,gBAAgB,EAAE,IAAK;EACvB,KAAK,EAAE,IAAK;EACZ,WAAW,EAAE,qCAAsC;EACnD,SAAS,EAAE,IAAK;EAChB,WAAW,EAAE,IAAK;EAClB,MAAM,EAAE,IAAK,GACd;;;AAED,AAAA,CAAC,EAAE,AAAA,EAAE,EAAE,AAAA,EAAE,EAAE,AAAA,EAAE,CAAC;EACZ,WAAW,EAAE,qCAAsC;EACnD,SAAS,EAAE,IAAK;EAChB,WAAW,EAAE,IAAK;EAClB,MAAM,EAAE,IAAK,GACd;;;AAED,AAAA,GAAG,CAAC;EACF,gBAAgB,EAAE,IAAK;EACvB,OAAO,EAAE,IAAK;EACd,SAAS,EAAE,IAAK,GACjB;;;AAED,AAAA,CAAC,CAAC;EACA,KAAK,EAAE,IAAK,GAUb;;EAXD,AAAA,CAAC,AAGE,QAAQ,CAAC;IACR,KAAK,EAAE,IAAK,GACb;;EALH,AAAA,CAAC,AAOE,MAAM,CAAC;IACN,KAAK,EAAE,IAAK;IACZ,gBAAgB,EAAE,IAAK,GACxB;;;AAGH,AAAA,EAAE,CAAC;EACD,cAAc,EAAE,GAAI,GACrB;;;AAED,AAAA,EAAE,CAAC;EACD,cAAc,EAAE,GAAI;EACpB,YAAY,EAAE,GAAI;EAClB,aAAa,EAAE,GAAI,GACpB;;;AAED,AAAA,GAAG,AACA,MAAM,EADT,AAAA,GAAG,AACS,QAAQ,CAAC;EACjB,aAAa,EAAE,IAAK,GACrB;;;AAGH,AAAA,OAAO,CAAC;EACN,KAAK,EAAE,KAAM,GACd;;;AAED,AAAA,kBAAkB,CAAC;EACjB,OAAO,EAAE,GAAI;EACb,gBAAgB,EAAE,GAAI;EACtB,OAAO,EAAE,KAAM,GAChB;;;AAED,AAAA,kBAAkB,CAAC;EACjB,KAAK,EAAE,KAAM;EACb,MAAM,EAAE,aAAc;EACtB,OAAO,EAAE,GAAI;EACb,cAAc,EAAE,CAAE;EAClB,aAAa,EAAE,IAAK;EACpB,gBAAgB,EAAE,OAAQ,GAiB3B;;EAvBD,AAQE,kBARgB,CAQhB,EAAE,CAAC;IACD,UAAU,EAAE,IAAK;IACjB,WAAW,EAAE,IAAK;IAClB,OAAO,EAAE,gBAAiB;IAC1B,SAAS,EAAE,IAAK;IAChB,MAAM,EAAE,IAAK;IACb,aAAa,EAAE,CAAE;IACjB,gBAAgB,EAAE,IAAK;IACvB,KAAK,EAAE,IAAK,GACb;;EAjBH,AAmBK,kBAnBa,CAmBhB,EAAE,CAAC,EAAE,CAAC;IACJ,SAAS,EAAE,IAAK;IAChB,UAAU,EAAE,MAAO,GACpB;;;AAGH,AAAA,KAAK,CAAC;EACJ,OAAO,EAAE,KAAM,GAChB",
+  "names": []
+}
\ No newline at end of file
diff --git a/hello_app/app/assets/stylesheets/scaffolds.scss b/hello_app/app/assets/stylesheets/scaffolds.scss
new file mode 100644
index 0000000..4ce4266
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/scaffolds.scss
@@ -0,0 +1,89 @@
+body {
+  background-color: #fff;
+  color: #333;
+  font-family: verdana, arial, helvetica, sans-serif;
+  font-size: 13px;
+  line-height: 18px;
+  margin: 33px;
+}
+
+p, ol, ul, td {
+  font-family: verdana, arial, helvetica, sans-serif;
+  font-size: 13px;
+  line-height: 18px;
+  margin: 33px;
+}
+
+pre {
+  background-color: #eee;
+  padding: 10px;
+  font-size: 11px;
+}
+
+a {
+  color: #000;
+
+  &:visited {
+    color: #666;
+  }
+
+  &:hover {
+    color: #fff;
+    background-color: #000;
+  }
+}
+
+th {
+  padding-bottom: 5px;
+}
+
+td {
+  padding-bottom: 7px;
+  padding-left: 5px;
+  padding-right: 5px;
+}
+
+div {
+  &.field, &.actions {
+    margin-bottom: 10px;
+  }
+}
+
+#notice {
+  color: green;
+}
+
+.field_with_errors {
+  padding: 2px;
+  background-color: red;
+  display: table;
+}
+
+#error_explanation {
+  width: 450px;
+  border: 2px solid red;
+  padding: 7px;
+  padding-bottom: 0;
+  margin-bottom: 20px;
+  background-color: #f0f0f0;
+
+  h2 {
+    text-align: left;
+    font-weight: bold;
+    padding: 5px 5px 5px 15px;
+    font-size: 12px;
+    margin: -7px;
+    margin-bottom: 0;
+    background-color: #c00;
+    color: #fff;
+  }
+
+  ul li {
+    font-size: 12px;
+    list-style: square;
+  }
+}
+
+label {
+  display: block;
+}
diff --git a/hello_app/app/assets/stylesheets/users.css b/hello_app/app/assets/stylesheets/users.css
new file mode 100644
index 0000000..7e81b84
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/users.css
@@ -0,0 +1,2 @@
+
+/*# sourceMappingURL=users.css.map */
\ No newline at end of file
diff --git a/hello_app/app/assets/stylesheets/users.css.map b/hello_app/app/assets/stylesheets/users.css.map
new file mode 100644
index 0000000..c802ea8
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/users.css.map
@@ -0,0 +1,9 @@
+{
+  "version": 3,
+  "file": "users.css",
+  "sources": [
+    "users.scss"
+  ],
+  "mappings": "",
+  "names": []
+}
\ No newline at end of file
diff --git a/hello_app/app/assets/stylesheets/users.scss b/hello_app/app/assets/stylesheets/users.scss
new file mode 100644
index 0000000..31a2eac
--- /dev/null
+++ b/hello_app/app/assets/stylesheets/users.scss
@@ -0,0 +1,3 @@
+// Place all the styles related to the Users controller here.
+// They will automatically be included in application.css.
+// You can use Sass (SCSS) here: http://sass-lang.com/
diff --git a/hello_app/app/channels/application_cable/channel.rb b/hello_app/app/channels/application_cable/channel.rb
new file mode 100644
index 0000000..d672697
--- /dev/null
+++ b/hello_app/app/channels/application_cable/channel.rb
@@ -0,0 +1,4 @@
+module ApplicationCable
+  class Channel < ActionCable::Channel::Base
+  end
+end
diff --git a/hello_app/app/channels/application_cable/connection.rb b/hello_app/app/channels/application_cable/connection.rb
new file mode 100644
index 0000000..0ff5442
--- /dev/null
+++ b/hello_app/app/channels/application_cable/connection.rb
@@ -0,0 +1,4 @@
+module ApplicationCable
+  class Connection < ActionCable::Connection::Base
+  end
+end
diff --git a/hello_app/app/controllers/application_controller.rb b/hello_app/app/controllers/application_controller.rb
new file mode 100644
index 0000000..ee401cc
--- /dev/null
+++ b/hello_app/app/controllers/application_controller.rb
@@ -0,0 +1,7 @@
+class ApplicationController < ActionController::Base
+  protect_from_forgery with: :exception
+  
+  def hello
+    render html: "Hello world!"
+  end
+end
diff --git a/hello_app/app/controllers/concerns/.keep b/hello_app/app/controllers/concerns/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/app/controllers/microposts_controller.rb b/hello_app/app/controllers/microposts_controller.rb
new file mode 100644
index 0000000..c36ac0b
--- /dev/null
+++ b/hello_app/app/controllers/microposts_controller.rb
@@ -0,0 +1,74 @@
+class MicropostsController < ApplicationController
+  before_action :set_micropost, only: [:show, :edit, :update, :destroy]
+
+  # GET /microposts
+  # GET /microposts.json
+  def index
+    @microposts = Micropost.all
+  end
+
+  # GET /microposts/1
+  # GET /microposts/1.json
+  def show
+  end
+
+  # GET /microposts/new
+  def new
+    @micropost = Micropost.new
+  end
+
+  # GET /microposts/1/edit
+  def edit
+  end
+
+  # POST /microposts
+  # POST /microposts.json
+  def create
+    @micropost = Micropost.new(micropost_params)
+
+    respond_to do |format|
+      if @micropost.save
+        format.html { redirect_to @micropost, notice: 'Micropost was successfully created.' }
+        format.json { render :show, status: :created, location: @micropost }
+      else
+        format.html { render :new }
+        format.json { render json: @micropost.errors, status: :unprocessable_entity }
+      end
+    end
+  end
+
+  # PATCH/PUT /microposts/1
+  # PATCH/PUT /microposts/1.json
+  def update
+    respond_to do |format|
+      if @micropost.update(micropost_params)
+        format.html { redirect_to @micropost, notice: 'Micropost was successfully updated.' }
+        format.json { render :show, status: :ok, location: @micropost }
+      else
+        format.html { render :edit }
+        format.json { render json: @micropost.errors, status: :unprocessable_entity }
+      end
+    end
+  end
+
+  # DELETE /microposts/1
+  # DELETE /microposts/1.json
+  def destroy
+    @micropost.destroy
+    respond_to do |format|
+      format.html { redirect_to microposts_url, notice: 'Micropost was successfully destroyed.' }
+      format.json { head :no_content }
+    end
+  end
+
+  private
+    # Use callbacks to share common setup or constraints between actions.
+    def set_micropost
+      @micropost = Micropost.find(params[:id])
+    end
+
+    # Never trust parameters from the scary internet, only allow the white list through.
+    def micropost_params
+      params.require(:micropost).permit(:content, :user_id)
+    end
+end
diff --git a/hello_app/app/controllers/users_controller.rb b/hello_app/app/controllers/users_controller.rb
new file mode 100644
index 0000000..46b6a95
--- /dev/null
+++ b/hello_app/app/controllers/users_controller.rb
@@ -0,0 +1,74 @@
+class UsersController < ApplicationController
+  before_action :set_user, only: [:show, :edit, :update, :destroy]
+
+  # GET /users
+  # GET /users.json
+  def index
+    @users = User.all
+  end
+
+  # GET /users/1
+  # GET /users/1.json
+  def show
+  end
+
+  # GET /users/new
+  def new
+    @user = User.new
+  end
+
+  # GET /users/1/edit
+  def edit
+  end
+
+  # POST /users
+  # POST /users.json
+  def create
+    @user = User.new(user_params)
+
+    respond_to do |format|
+      if @user.save
+        format.html { redirect_to @user, notice: 'User was successfully created.' }
+        format.json { render :show, status: :created, location: @user }
+      else
+        format.html { render :new }
+        format.json { render json: @user.errors, status: :unprocessable_entity }
+      end
+    end
+  end
+
+  # PATCH/PUT /users/1
+  # PATCH/PUT /users/1.json
+  def update
+    respond_to do |format|
+      if @user.update(user_params)
+        format.html { redirect_to @user, notice: 'User was successfully updated.' }
+        format.json { render :show, status: :ok, location: @user }
+      else
+        format.html { render :edit }
+        format.json { render json: @user.errors, status: :unprocessable_entity }
+      end
+    end
+  end
+
+  # DELETE /users/1
+  # DELETE /users/1.json
+  def destroy
+    @user.destroy
+    respond_to do |format|
+      format.html { redirect_to users_url, notice: 'User was successfully destroyed.' }
+      format.json { head :no_content }
+    end
+  end
+
+  private
+    # Use callbacks to share common setup or constraints between actions.
+    def set_user
+      @user = User.find(params[:id])
+    end
+
+    # Never trust parameters from the scary internet, only allow the white list through.
+    def user_params
+      params.require(:user).permit(:name, :email)
+    end
+end
diff --git a/hello_app/app/helpers/application_helper.rb b/hello_app/app/helpers/application_helper.rb
new file mode 100644
index 0000000..de6be79
--- /dev/null
+++ b/hello_app/app/helpers/application_helper.rb
@@ -0,0 +1,2 @@
+module ApplicationHelper
+end
diff --git a/hello_app/app/helpers/microposts_helper.rb b/hello_app/app/helpers/microposts_helper.rb
new file mode 100644
index 0000000..f08aad2
--- /dev/null
+++ b/hello_app/app/helpers/microposts_helper.rb
@@ -0,0 +1,2 @@
+module MicropostsHelper
+end
diff --git a/hello_app/app/helpers/users_helper.rb b/hello_app/app/helpers/users_helper.rb
new file mode 100644
index 0000000..2310a24
--- /dev/null
+++ b/hello_app/app/helpers/users_helper.rb
@@ -0,0 +1,2 @@
+module UsersHelper
+end
diff --git a/hello_app/app/jobs/application_job.rb b/hello_app/app/jobs/application_job.rb
new file mode 100644
index 0000000..a009ace
--- /dev/null
+++ b/hello_app/app/jobs/application_job.rb
@@ -0,0 +1,2 @@
+class ApplicationJob < ActiveJob::Base
+end
diff --git a/hello_app/app/mailers/application_mailer.rb b/hello_app/app/mailers/application_mailer.rb
new file mode 100644
index 0000000..286b223
--- /dev/null
+++ b/hello_app/app/mailers/application_mailer.rb
@@ -0,0 +1,4 @@
+class ApplicationMailer < ActionMailer::Base
+  default from: 'from@example.com'
+  layout 'mailer'
+end
diff --git a/hello_app/app/models/application_record.rb b/hello_app/app/models/application_record.rb
new file mode 100644
index 0000000..10a4cba
--- /dev/null
+++ b/hello_app/app/models/application_record.rb
@@ -0,0 +1,3 @@
+class ApplicationRecord < ActiveRecord::Base
+  self.abstract_class = true
+end
diff --git a/hello_app/app/models/concerns/.keep b/hello_app/app/models/concerns/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/app/models/micropost.rb b/hello_app/app/models/micropost.rb
new file mode 100644
index 0000000..41bdf0b
--- /dev/null
+++ b/hello_app/app/models/micropost.rb
@@ -0,0 +1,5 @@
+class Micropost < ApplicationRecord
+  belongs_to :user
+  validates :content, length: { maximum: 140 },
+  presence: true
+end
diff --git a/hello_app/app/models/user.rb b/hello_app/app/models/user.rb
new file mode 100644
index 0000000..11ba7a8
--- /dev/null
+++ b/hello_app/app/models/user.rb
@@ -0,0 +1,5 @@
+class User < ApplicationRecord
+  has_many :microposts
+  validates :name, presence: true    # Replace FILL_IN with the right code.
+  validates :email, presence: true    # Replace FILL_IN with the right code.
+end
diff --git a/hello_app/app/views/layouts/application.html.erb b/hello_app/app/views/layouts/application.html.erb
new file mode 100644
index 0000000..80f5f4d
--- /dev/null
+++ b/hello_app/app/views/layouts/application.html.erb
@@ -0,0 +1,14 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <title>HelloApp</title>
+    <%= csrf_meta_tags %>
+
+    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
+    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
+  </head>
+
+  <body>
+    <%= yield %>
+  </body>
+</html>
diff --git a/hello_app/app/views/layouts/mailer.html.erb b/hello_app/app/views/layouts/mailer.html.erb
new file mode 100644
index 0000000..cbd34d2
--- /dev/null
+++ b/hello_app/app/views/layouts/mailer.html.erb
@@ -0,0 +1,13 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
+    <style>
+      /* Email styles need to be inline */
+    </style>
+  </head>
+
+  <body>
+    <%= yield %>
+  </body>
+</html>
diff --git a/hello_app/app/views/layouts/mailer.text.erb b/hello_app/app/views/layouts/mailer.text.erb
new file mode 100644
index 0000000..37f0bdd
--- /dev/null
+++ b/hello_app/app/views/layouts/mailer.text.erb
@@ -0,0 +1 @@
+<%= yield %>
diff --git a/hello_app/app/views/microposts/_form.html.erb b/hello_app/app/views/microposts/_form.html.erb
new file mode 100644
index 0000000..1746129
--- /dev/null
+++ b/hello_app/app/views/microposts/_form.html.erb
@@ -0,0 +1,27 @@
+<%= form_for(micropost) do |f| %>
+  <% if micropost.errors.any? %>
+    <div id="error_explanation">
+      <h2><%= pluralize(micropost.errors.count, "error") %> prohibited this micropost from being saved:</h2>
+
+      <ul>
+      <% micropost.errors.full_messages.each do |message| %>
+        <li><%= message %></li>
+      <% end %>
+      </ul>
+    </div>
+  <% end %>
+
+  <div class="field">
+    <%= f.label :content %>
+    <%= f.text_area :content %>
+  </div>
+
+  <div class="field">
+    <%= f.label :user_id %>
+    <%= f.number_field :user_id %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit %>
+  </div>
+<% end %>
diff --git a/hello_app/app/views/microposts/_micropost.json.jbuilder b/hello_app/app/views/microposts/_micropost.json.jbuilder
new file mode 100644
index 0000000..2c804c1
--- /dev/null
+++ b/hello_app/app/views/microposts/_micropost.json.jbuilder
@@ -0,0 +1,2 @@
+json.extract! micropost, :id, :content, :user_id, :created_at, :updated_at
+json.url micropost_url(micropost, format: :json)
\ No newline at end of file
diff --git a/hello_app/app/views/microposts/edit.html.erb b/hello_app/app/views/microposts/edit.html.erb
new file mode 100644
index 0000000..24d0d08
--- /dev/null
+++ b/hello_app/app/views/microposts/edit.html.erb
@@ -0,0 +1,6 @@
+<h1>Editing Micropost</h1>
+
+<%= render 'form', micropost: @micropost %>
+
+<%= link_to 'Show', @micropost %> |
+<%= link_to 'Back', microposts_path %>
diff --git a/hello_app/app/views/microposts/index.html.erb b/hello_app/app/views/microposts/index.html.erb
new file mode 100644
index 0000000..7179eb3
--- /dev/null
+++ b/hello_app/app/views/microposts/index.html.erb
@@ -0,0 +1,29 @@
+<p id="notice"><%= notice %></p>
+
+<h1>Microposts</h1>
+
+<table>
+  <thead>
+    <tr>
+      <th>Content</th>
+      <th>User</th>
+      <th colspan="3"></th>
+    </tr>
+  </thead>
+
+  <tbody>
+    <% @microposts.each do |micropost| %>
+      <tr>
+        <td><%= micropost.content %></td>
+        <td><%= micropost.user_id %></td>
+        <td><%= link_to 'Show', micropost %></td>
+        <td><%= link_to 'Edit', edit_micropost_path(micropost) %></td>
+        <td><%= link_to 'Destroy', micropost, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+      </tr>
+    <% end %>
+  </tbody>
+</table>
+
+<br>
+
+<%= link_to 'New Micropost', new_micropost_path %>
diff --git a/hello_app/app/views/microposts/index.json.jbuilder b/hello_app/app/views/microposts/index.json.jbuilder
new file mode 100644
index 0000000..e75998f
--- /dev/null
+++ b/hello_app/app/views/microposts/index.json.jbuilder
@@ -0,0 +1 @@
+json.array! @microposts, partial: 'microposts/micropost', as: :micropost
\ No newline at end of file
diff --git a/hello_app/app/views/microposts/new.html.erb b/hello_app/app/views/microposts/new.html.erb
new file mode 100644
index 0000000..5ca66aa
--- /dev/null
+++ b/hello_app/app/views/microposts/new.html.erb
@@ -0,0 +1,5 @@
+<h1>New Micropost</h1>
+
+<%= render 'form', micropost: @micropost %>
+
+<%= link_to 'Back', microposts_path %>
diff --git a/hello_app/app/views/microposts/show.html.erb b/hello_app/app/views/microposts/show.html.erb
new file mode 100644
index 0000000..0e55f60
--- /dev/null
+++ b/hello_app/app/views/microposts/show.html.erb
@@ -0,0 +1,14 @@
+<p id="notice"><%= notice %></p>
+
+<p>
+  <strong>Content:</strong>
+  <%= @micropost.content %>
+</p>
+
+<p>
+  <strong>User:</strong>
+  <%= @micropost.user_id %>
+</p>
+
+<%= link_to 'Edit', edit_micropost_path(@micropost) %> |
+<%= link_to 'Back', microposts_path %>
diff --git a/hello_app/app/views/microposts/show.json.jbuilder b/hello_app/app/views/microposts/show.json.jbuilder
new file mode 100644
index 0000000..84d2184
--- /dev/null
+++ b/hello_app/app/views/microposts/show.json.jbuilder
@@ -0,0 +1 @@
+json.partial! "microposts/micropost", micropost: @micropost
\ No newline at end of file
diff --git a/hello_app/app/views/users/_form.html.erb b/hello_app/app/views/users/_form.html.erb
new file mode 100644
index 0000000..90688af
--- /dev/null
+++ b/hello_app/app/views/users/_form.html.erb
@@ -0,0 +1,27 @@
+<%= form_for(user) do |f| %>
+  <% if user.errors.any? %>
+    <div id="error_explanation">
+      <h2><%= pluralize(user.errors.count, "error") %> prohibited this user from being saved:</h2>
+
+      <ul>
+      <% user.errors.full_messages.each do |message| %>
+        <li><%= message %></li>
+      <% end %>
+      </ul>
+    </div>
+  <% end %>
+
+  <div class="field">
+    <%= f.label :name %>
+    <%= f.text_field :name %>
+  </div>
+
+  <div class="field">
+    <%= f.label :email %>
+    <%= f.text_field :email %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit %>
+  </div>
+<% end %>
diff --git a/hello_app/app/views/users/_user.json.jbuilder b/hello_app/app/views/users/_user.json.jbuilder
new file mode 100644
index 0000000..499cb57
--- /dev/null
+++ b/hello_app/app/views/users/_user.json.jbuilder
@@ -0,0 +1,2 @@
+json.extract! user, :id, :name, :email, :created_at, :updated_at
+json.url user_url(user, format: :json)
\ No newline at end of file
diff --git a/hello_app/app/views/users/edit.html.erb b/hello_app/app/views/users/edit.html.erb
new file mode 100644
index 0000000..1a5c2a6
--- /dev/null
+++ b/hello_app/app/views/users/edit.html.erb
@@ -0,0 +1,6 @@
+<h1>Editing User</h1>
+
+<%= render 'form', user: @user %>
+
+<%= link_to 'Show', @user %> |
+<%= link_to 'Back', users_path %>
diff --git a/hello_app/app/views/users/index.html.erb b/hello_app/app/views/users/index.html.erb
new file mode 100644
index 0000000..c3d7566
--- /dev/null
+++ b/hello_app/app/views/users/index.html.erb
@@ -0,0 +1,29 @@
+<p id="notice"><%= notice %></p>
+
+<h1>Users</h1>
+
+<table>
+  <thead>
+    <tr>
+      <th>Name</th>
+      <th>Email</th>
+      <th colspan="3"></th>
+    </tr>
+  </thead>
+
+  <tbody>
+    <% @users.each do |user| %>
+      <tr>
+        <td><%= user.name %></td>
+        <td><%= user.email %></td>
+        <td><%= link_to 'Show', user %></td>
+        <td><%= link_to 'Edit', edit_user_path(user) %></td>
+        <td><%= link_to 'Destroy', user, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+      </tr>
+    <% end %>
+  </tbody>
+</table>
+
+<br>
+
+<%= link_to 'New User', new_user_path %>
diff --git a/hello_app/app/views/users/index.json.jbuilder b/hello_app/app/views/users/index.json.jbuilder
new file mode 100644
index 0000000..d6891e6
--- /dev/null
+++ b/hello_app/app/views/users/index.json.jbuilder
@@ -0,0 +1 @@
+json.array! @users, partial: 'users/user', as: :user
\ No newline at end of file
diff --git a/hello_app/app/views/users/new.html.erb b/hello_app/app/views/users/new.html.erb
new file mode 100644
index 0000000..844c39b
--- /dev/null
+++ b/hello_app/app/views/users/new.html.erb
@@ -0,0 +1,5 @@
+<h1>New User</h1>
+
+<%= render 'form', user: @user %>
+
+<%= link_to 'Back', users_path %>
diff --git a/hello_app/app/views/users/show.html.erb b/hello_app/app/views/users/show.html.erb
new file mode 100644
index 0000000..3816c64
--- /dev/null
+++ b/hello_app/app/views/users/show.html.erb
@@ -0,0 +1,14 @@
+<p id="notice"><%= notice %></p>
+
+<p>
+  <strong>Name:</strong>
+  <%= @user.name %>
+</p>
+
+<p>
+  <strong>Email:</strong>
+  <%= @user.email %>
+</p>
+
+<%= link_to 'Edit', edit_user_path(@user) %> |
+<%= link_to 'Back', users_path %>
diff --git a/hello_app/app/views/users/show.json.jbuilder b/hello_app/app/views/users/show.json.jbuilder
new file mode 100644
index 0000000..a2e64e0
--- /dev/null
+++ b/hello_app/app/views/users/show.json.jbuilder
@@ -0,0 +1 @@
+json.partial! "users/user", user: @user
\ No newline at end of file
diff --git a/hello_app/bin/bundle b/hello_app/bin/bundle
new file mode 100755
index 0000000..66e9889
--- /dev/null
+++ b/hello_app/bin/bundle
@@ -0,0 +1,3 @@
+#!/usr/bin/env ruby
+ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
+load Gem.bin_path('bundler', 'bundle')
diff --git a/hello_app/bin/rails b/hello_app/bin/rails
new file mode 100755
index 0000000..5badb2f
--- /dev/null
+++ b/hello_app/bin/rails
@@ -0,0 +1,9 @@
+#!/usr/bin/env ruby
+begin
+  load File.expand_path('../spring', __FILE__)
+rescue LoadError => e
+  raise unless e.message.include?('spring')
+end
+APP_PATH = File.expand_path('../config/application', __dir__)
+require_relative '../config/boot'
+require 'rails/commands'
diff --git a/hello_app/bin/rake b/hello_app/bin/rake
new file mode 100755
index 0000000..d87d5f5
--- /dev/null
+++ b/hello_app/bin/rake
@@ -0,0 +1,9 @@
+#!/usr/bin/env ruby
+begin
+  load File.expand_path('../spring', __FILE__)
+rescue LoadError => e
+  raise unless e.message.include?('spring')
+end
+require_relative '../config/boot'
+require 'rake'
+Rake.application.run
diff --git a/hello_app/bin/setup b/hello_app/bin/setup
new file mode 100755
index 0000000..e620b4d
--- /dev/null
+++ b/hello_app/bin/setup
@@ -0,0 +1,34 @@
+#!/usr/bin/env ruby
+require 'pathname'
+require 'fileutils'
+include FileUtils
+
+# path to your application root.
+APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)
+
+def system!(*args)
+  system(*args) || abort("\n== Command #{args} failed ==")
+end
+
+chdir APP_ROOT do
+  # This script is a starting point to setup your application.
+  # Add necessary setup steps to this file.
+
+  puts '== Installing dependencies =='
+  system! 'gem install bundler --conservative'
+  system('bundle check') || system!('bundle install')
+
+  # puts "\n== Copying sample files =="
+  # unless File.exist?('config/database.yml')
+  #   cp 'config/database.yml.sample', 'config/database.yml'
+  # end
+
+  puts "\n== Preparing database =="
+  system! 'bin/rails db:setup'
+
+  puts "\n== Removing old logs and tempfiles =="
+  system! 'bin/rails log:clear tmp:clear'
+
+  puts "\n== Restarting application server =="
+  system! 'bin/rails restart'
+end
diff --git a/hello_app/bin/spring b/hello_app/bin/spring
new file mode 100755
index 0000000..fb2ec2e
--- /dev/null
+++ b/hello_app/bin/spring
@@ -0,0 +1,17 @@
+#!/usr/bin/env ruby
+
+# This file loads spring without using Bundler, in order to be fast.
+# It gets overwritten when you run the `spring binstub` command.
+
+unless defined?(Spring)
+  require 'rubygems'
+  require 'bundler'
+
+  lockfile = Bundler::LockfileParser.new(Bundler.default_lockfile.read)
+  spring = lockfile.specs.detect { |spec| spec.name == "spring" }
+  if spring
+    Gem.use_paths Gem.dir, Bundler.bundle_path.to_s, *Gem.path
+    gem 'spring', spring.version
+    require 'spring/binstub'
+  end
+end
diff --git a/hello_app/bin/update b/hello_app/bin/update
new file mode 100755
index 0000000..a8e4462
--- /dev/null
+++ b/hello_app/bin/update
@@ -0,0 +1,29 @@
+#!/usr/bin/env ruby
+require 'pathname'
+require 'fileutils'
+include FileUtils
+
+# path to your application root.
+APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)
+
+def system!(*args)
+  system(*args) || abort("\n== Command #{args} failed ==")
+end
+
+chdir APP_ROOT do
+  # This script is a way to update your development environment automatically.
+  # Add necessary update steps to this file.
+
+  puts '== Installing dependencies =='
+  system! 'gem install bundler --conservative'
+  system('bundle check') || system!('bundle install')
+
+  puts "\n== Updating database =="
+  system! 'bin/rails db:migrate'
+
+  puts "\n== Removing old logs and tempfiles =="
+  system! 'bin/rails log:clear tmp:clear'
+
+  puts "\n== Restarting application server =="
+  system! 'bin/rails restart'
+end
diff --git a/hello_app/config.ru b/hello_app/config.ru
new file mode 100644
index 0000000..f7ba0b5
--- /dev/null
+++ b/hello_app/config.ru
@@ -0,0 +1,5 @@
+# This file is used by Rack-based servers to start the application.
+
+require_relative 'config/environment'
+
+run Rails.application
diff --git a/hello_app/config/application.rb b/hello_app/config/application.rb
new file mode 100644
index 0000000..32445cf
--- /dev/null
+++ b/hello_app/config/application.rb
@@ -0,0 +1,15 @@
+require_relative 'boot'
+
+require 'rails/all'
+
+# Require the gems listed in Gemfile, including any gems
+# you've limited to :test, :development, or :production.
+Bundler.require(*Rails.groups)
+
+module HelloApp
+  class Application < Rails::Application
+    # Settings in config/environments/* take precedence over those specified here.
+    # Application configuration should go into files in config/initializers
+    # -- all .rb files in that directory are automatically loaded.
+  end
+end
diff --git a/hello_app/config/boot.rb b/hello_app/config/boot.rb
new file mode 100644
index 0000000..30f5120
--- /dev/null
+++ b/hello_app/config/boot.rb
@@ -0,0 +1,3 @@
+ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
+
+require 'bundler/setup' # Set up gems listed in the Gemfile.
diff --git a/hello_app/config/cable.yml b/hello_app/config/cable.yml
new file mode 100644
index 0000000..0bbde6f
--- /dev/null
+++ b/hello_app/config/cable.yml
@@ -0,0 +1,9 @@
+development:
+  adapter: async
+
+test:
+  adapter: async
+
+production:
+  adapter: redis
+  url: redis://localhost:6379/1
diff --git a/hello_app/config/database.yml b/hello_app/config/database.yml
new file mode 100644
index 0000000..1c1a37c
--- /dev/null
+++ b/hello_app/config/database.yml
@@ -0,0 +1,25 @@
+# SQLite version 3.x
+#   gem install sqlite3
+#
+#   Ensure the SQLite 3 gem is defined in your Gemfile
+#   gem 'sqlite3'
+#
+default: &default
+  adapter: sqlite3
+  pool: 5
+  timeout: 5000
+
+development:
+  <<: *default
+  database: db/development.sqlite3
+
+# Warning: The database defined as "test" will be erased and
+# re-generated from your development database when you run "rake".
+# Do not set this db to the same as development or production.
+test:
+  <<: *default
+  database: db/test.sqlite3
+
+production:
+  <<: *default
+  database: db/production.sqlite3
diff --git a/hello_app/config/environment.rb b/hello_app/config/environment.rb
new file mode 100644
index 0000000..426333b
--- /dev/null
+++ b/hello_app/config/environment.rb
@@ -0,0 +1,5 @@
+# Load the Rails application.
+require_relative 'application'
+
+# Initialize the Rails application.
+Rails.application.initialize!
diff --git a/hello_app/config/environments/development.rb b/hello_app/config/environments/development.rb
new file mode 100644
index 0000000..6f71970
--- /dev/null
+++ b/hello_app/config/environments/development.rb
@@ -0,0 +1,54 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # In the development environment your application's code is reloaded on
+  # every request. This slows down response time but is perfect for development
+  # since you don't have to restart the web server when you make code changes.
+  config.cache_classes = false
+
+  # Do not eager load code on boot.
+  config.eager_load = false
+
+  # Show full error reports.
+  config.consider_all_requests_local = true
+
+  # Enable/disable caching. By default caching is disabled.
+  if Rails.root.join('tmp/caching-dev.txt').exist?
+    config.action_controller.perform_caching = true
+
+    config.cache_store = :memory_store
+    config.public_file_server.headers = {
+      'Cache-Control' => 'public, max-age=172800'
+    }
+  else
+    config.action_controller.perform_caching = false
+
+    config.cache_store = :null_store
+  end
+
+  # Don't care if the mailer can't send.
+  config.action_mailer.raise_delivery_errors = false
+
+  config.action_mailer.perform_caching = false
+
+  # Print deprecation notices to the Rails logger.
+  config.active_support.deprecation = :log
+
+  # Raise an error on page load if there are pending migrations.
+  config.active_record.migration_error = :page_load
+
+  # Debug mode disables concatenation and preprocessing of assets.
+  # This option may cause significant delays in view rendering with a large
+  # number of complex assets.
+  config.assets.debug = true
+
+  # Suppress logger output for asset requests.
+  config.assets.quiet = true
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
+
+  # Use an evented file watcher to asynchronously detect changes in source code,
+  # routes, locales, etc. This feature depends on the listen gem.
+  config.file_watcher = ActiveSupport::EventedFileUpdateChecker
+end
diff --git a/hello_app/config/environments/production.rb b/hello_app/config/environments/production.rb
new file mode 100644
index 0000000..fc8fb8a
--- /dev/null
+++ b/hello_app/config/environments/production.rb
@@ -0,0 +1,86 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # Code is not reloaded between requests.
+  config.cache_classes = true
+
+  # Eager load code on boot. This eager loads most of Rails and
+  # your application in memory, allowing both threaded web servers
+  # and those relying on copy on write to perform better.
+  # Rake tasks automatically ignore this option for performance.
+  config.eager_load = true
+
+  # Full error reports are disabled and caching is turned on.
+  config.consider_all_requests_local       = false
+  config.action_controller.perform_caching = true
+
+  # Disable serving static files from the `/public` folder by default since
+  # Apache or NGINX already handles this.
+  config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present?
+
+  # Compress JavaScripts and CSS.
+  config.assets.js_compressor = :uglifier
+  # config.assets.css_compressor = :sass
+
+  # Do not fallback to assets pipeline if a precompiled asset is missed.
+  config.assets.compile = false
+
+  # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb
+
+  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
+  # config.action_controller.asset_host = 'http://assets.example.com'
+
+  # Specifies the header that your server uses for sending files.
+  # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache
+  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX
+
+  # Mount Action Cable outside main process or domain
+  # config.action_cable.mount_path = nil
+  # config.action_cable.url = 'wss://example.com/cable'
+  # config.action_cable.allowed_request_origins = [ 'http://example.com', /http:\/\/example.*/ ]
+
+  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
+  # config.force_ssl = true
+
+  # Use the lowest log level to ensure availability of diagnostic information
+  # when problems arise.
+  config.log_level = :debug
+
+  # Prepend all log lines with the following tags.
+  config.log_tags = [ :request_id ]
+
+  # Use a different cache store in production.
+  # config.cache_store = :mem_cache_store
+
+  # Use a real queuing backend for Active Job (and separate queues per environment)
+  # config.active_job.queue_adapter     = :resque
+  # config.active_job.queue_name_prefix = "hello_app_#{Rails.env}"
+  config.action_mailer.perform_caching = false
+
+  # Ignore bad email addresses and do not raise email delivery errors.
+  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
+  # config.action_mailer.raise_delivery_errors = false
+
+  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
+  # the I18n.default_locale when a translation cannot be found).
+  config.i18n.fallbacks = true
+
+  # Send deprecation notices to registered listeners.
+  config.active_support.deprecation = :notify
+
+  # Use default logging formatter so that PID and timestamp are not suppressed.
+  config.log_formatter = ::Logger::Formatter.new
+
+  # Use a different logger for distributed setups.
+  # require 'syslog/logger'
+  # config.logger = ActiveSupport::TaggedLogging.new(Syslog::Logger.new 'app-name')
+
+  if ENV["RAILS_LOG_TO_STDOUT"].present?
+    logger           = ActiveSupport::Logger.new(STDOUT)
+    logger.formatter = config.log_formatter
+    config.logger = ActiveSupport::TaggedLogging.new(logger)
+  end
+
+  # Do not dump schema after migrations.
+  config.active_record.dump_schema_after_migration = false
+end
diff --git a/hello_app/config/environments/test.rb b/hello_app/config/environments/test.rb
new file mode 100644
index 0000000..30587ef
--- /dev/null
+++ b/hello_app/config/environments/test.rb
@@ -0,0 +1,42 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # The test environment is used exclusively to run your application's
+  # test suite. You never need to work with it otherwise. Remember that
+  # your test database is "scratch space" for the test suite and is wiped
+  # and recreated between test runs. Don't rely on the data there!
+  config.cache_classes = true
+
+  # Do not eager load code on boot. This avoids loading your whole application
+  # just for the purpose of running a single test. If you are using a tool that
+  # preloads Rails for running tests, you may have to set it to true.
+  config.eager_load = false
+
+  # Configure public file server for tests with Cache-Control for performance.
+  config.public_file_server.enabled = true
+  config.public_file_server.headers = {
+    'Cache-Control' => 'public, max-age=3600'
+  }
+
+  # Show full error reports and disable caching.
+  config.consider_all_requests_local       = true
+  config.action_controller.perform_caching = false
+
+  # Raise exceptions instead of rendering exception templates.
+  config.action_dispatch.show_exceptions = false
+
+  # Disable request forgery protection in test environment.
+  config.action_controller.allow_forgery_protection = false
+  config.action_mailer.perform_caching = false
+
+  # Tell Action Mailer not to deliver emails to the real world.
+  # The :test delivery method accumulates sent emails in the
+  # ActionMailer::Base.deliveries array.
+  config.action_mailer.delivery_method = :test
+
+  # Print deprecation notices to the stderr.
+  config.active_support.deprecation = :stderr
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
+end
diff --git a/hello_app/config/initializers/application_controller_renderer.rb b/hello_app/config/initializers/application_controller_renderer.rb
new file mode 100644
index 0000000..51639b6
--- /dev/null
+++ b/hello_app/config/initializers/application_controller_renderer.rb
@@ -0,0 +1,6 @@
+# Be sure to restart your server when you modify this file.
+
+# ApplicationController.renderer.defaults.merge!(
+#   http_host: 'example.org',
+#   https: false
+# )
diff --git a/hello_app/config/initializers/assets.rb b/hello_app/config/initializers/assets.rb
new file mode 100644
index 0000000..01ef3e6
--- /dev/null
+++ b/hello_app/config/initializers/assets.rb
@@ -0,0 +1,11 @@
+# Be sure to restart your server when you modify this file.
+
+# Version of your assets, change this if you want to expire all your assets.
+Rails.application.config.assets.version = '1.0'
+
+# Add additional assets to the asset load path
+# Rails.application.config.assets.paths << Emoji.images_path
+
+# Precompile additional assets.
+# application.js, application.css, and all non-JS/CSS in app/assets folder are already added.
+# Rails.application.config.assets.precompile += %w( search.js )
diff --git a/hello_app/config/initializers/backtrace_silencers.rb b/hello_app/config/initializers/backtrace_silencers.rb
new file mode 100644
index 0000000..59385cd
--- /dev/null
+++ b/hello_app/config/initializers/backtrace_silencers.rb
@@ -0,0 +1,7 @@
+# Be sure to restart your server when you modify this file.
+
+# You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
+# Rails.backtrace_cleaner.add_silencer { |line| line =~ /my_noisy_library/ }
+
+# You can also remove all the silencers if you're trying to debug a problem that might stem from framework code.
+# Rails.backtrace_cleaner.remove_silencers!
diff --git a/hello_app/config/initializers/cookies_serializer.rb b/hello_app/config/initializers/cookies_serializer.rb
new file mode 100644
index 0000000..5a6a32d
--- /dev/null
+++ b/hello_app/config/initializers/cookies_serializer.rb
@@ -0,0 +1,5 @@
+# Be sure to restart your server when you modify this file.
+
+# Specify a serializer for the signed and encrypted cookie jars.
+# Valid options are :json, :marshal, and :hybrid.
+Rails.application.config.action_dispatch.cookies_serializer = :json
diff --git a/hello_app/config/initializers/filter_parameter_logging.rb b/hello_app/config/initializers/filter_parameter_logging.rb
new file mode 100644
index 0000000..4a994e1
--- /dev/null
+++ b/hello_app/config/initializers/filter_parameter_logging.rb
@@ -0,0 +1,4 @@
+# Be sure to restart your server when you modify this file.
+
+# Configure sensitive parameters which will be filtered from the log file.
+Rails.application.config.filter_parameters += [:password]
diff --git a/hello_app/config/initializers/inflections.rb b/hello_app/config/initializers/inflections.rb
new file mode 100644
index 0000000..ac033bf
--- /dev/null
+++ b/hello_app/config/initializers/inflections.rb
@@ -0,0 +1,16 @@
+# Be sure to restart your server when you modify this file.
+
+# Add new inflection rules using the following format. Inflections
+# are locale specific, and you may define rules for as many different
+# locales as you wish. All of these examples are active by default:
+# ActiveSupport::Inflector.inflections(:en) do |inflect|
+#   inflect.plural /^(ox)$/i, '\1en'
+#   inflect.singular /^(ox)en/i, '\1'
+#   inflect.irregular 'person', 'people'
+#   inflect.uncountable %w( fish sheep )
+# end
+
+# These inflection rules are supported but not enabled by default:
+# ActiveSupport::Inflector.inflections(:en) do |inflect|
+#   inflect.acronym 'RESTful'
+# end
diff --git a/hello_app/config/initializers/mime_types.rb b/hello_app/config/initializers/mime_types.rb
new file mode 100644
index 0000000..dc18996
--- /dev/null
+++ b/hello_app/config/initializers/mime_types.rb
@@ -0,0 +1,4 @@
+# Be sure to restart your server when you modify this file.
+
+# Add new mime types for use in respond_to blocks:
+# Mime::Type.register "text/richtext", :rtf
diff --git a/hello_app/config/initializers/new_framework_defaults.rb b/hello_app/config/initializers/new_framework_defaults.rb
new file mode 100644
index 0000000..671abb6
--- /dev/null
+++ b/hello_app/config/initializers/new_framework_defaults.rb
@@ -0,0 +1,24 @@
+# Be sure to restart your server when you modify this file.
+#
+# This file contains migration options to ease your Rails 5.0 upgrade.
+#
+# Read the Guide for Upgrading Ruby on Rails for more info on each option.
+
+# Enable per-form CSRF tokens. Previous versions had false.
+Rails.application.config.action_controller.per_form_csrf_tokens = true
+
+# Enable origin-checking CSRF mitigation. Previous versions had false.
+Rails.application.config.action_controller.forgery_protection_origin_check = true
+
+# Make Ruby 2.4 preserve the timezone of the receiver when calling `to_time`.
+# Previous versions had false.
+ActiveSupport.to_time_preserves_timezone = true
+
+# Require `belongs_to` associations by default. Previous versions had false.
+Rails.application.config.active_record.belongs_to_required_by_default = true
+
+# Do not halt callback chains when a callback returns false. Previous versions had true.
+ActiveSupport.halt_callback_chains_on_return_false = false
+
+# Configure SSL options to enable HSTS with subdomains. Previous versions had false.
+Rails.application.config.ssl_options = { hsts: { subdomains: true } }
diff --git a/hello_app/config/initializers/session_store.rb b/hello_app/config/initializers/session_store.rb
new file mode 100644
index 0000000..5951fbc
--- /dev/null
+++ b/hello_app/config/initializers/session_store.rb
@@ -0,0 +1,3 @@
+# Be sure to restart your server when you modify this file.
+
+Rails.application.config.session_store :cookie_store, key: '_hello_app_session'
diff --git a/hello_app/config/initializers/wrap_parameters.rb b/hello_app/config/initializers/wrap_parameters.rb
new file mode 100644
index 0000000..bbfc396
--- /dev/null
+++ b/hello_app/config/initializers/wrap_parameters.rb
@@ -0,0 +1,14 @@
+# Be sure to restart your server when you modify this file.
+
+# This file contains settings for ActionController::ParamsWrapper which
+# is enabled by default.
+
+# Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.
+ActiveSupport.on_load(:action_controller) do
+  wrap_parameters format: [:json]
+end
+
+# To enable root element in JSON for ActiveRecord objects.
+# ActiveSupport.on_load(:active_record) do
+#   self.include_root_in_json = true
+# end
diff --git a/hello_app/config/locales/en.yml b/hello_app/config/locales/en.yml
new file mode 100644
index 0000000..0653957
--- /dev/null
+++ b/hello_app/config/locales/en.yml
@@ -0,0 +1,23 @@
+# Files in the config/locales directory are used for internationalization
+# and are automatically loaded by Rails. If you want to use locales other
+# than English, add the necessary files in this directory.
+#
+# To use the locales, use `I18n.t`:
+#
+#     I18n.t 'hello'
+#
+# In views, this is aliased to just `t`:
+#
+#     <%= t('hello') %>
+#
+# To use a different locale, set it with `I18n.locale`:
+#
+#     I18n.locale = :es
+#
+# This would use the information in config/locales/es.yml.
+#
+# To learn more, please read the Rails Internationalization guide
+# available at http://guides.rubyonrails.org/i18n.html.
+
+en:
+  hello: "Hello world"
diff --git a/hello_app/config/puma.rb b/hello_app/config/puma.rb
new file mode 100644
index 0000000..c7f311f
--- /dev/null
+++ b/hello_app/config/puma.rb
@@ -0,0 +1,47 @@
+# Puma can serve each request in a thread from an internal thread pool.
+# The `threads` method setting takes two numbers a minimum and maximum.
+# Any libraries that use thread pools should be configured to match
+# the maximum value specified for Puma. Default is set to 5 threads for minimum
+# and maximum, this matches the default thread size of Active Record.
+#
+threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }.to_i
+threads threads_count, threads_count
+
+# Specifies the `port` that Puma will listen on to receive requests, default is 3000.
+#
+port        ENV.fetch("PORT") { 3000 }
+
+# Specifies the `environment` that Puma will run in.
+#
+environment ENV.fetch("RAILS_ENV") { "development" }
+
+# Specifies the number of `workers` to boot in clustered mode.
+# Workers are forked webserver processes. If using threads and workers together
+# the concurrency of the application would be max `threads` * `workers`.
+# Workers do not work on JRuby or Windows (both of which do not support
+# processes).
+#
+# workers ENV.fetch("WEB_CONCURRENCY") { 2 }
+
+# Use the `preload_app!` method when specifying a `workers` number.
+# This directive tells Puma to first boot the application and load code
+# before forking the application. This takes advantage of Copy On Write
+# process behavior so workers use less memory. If you use this option
+# you need to make sure to reconnect any threads in the `on_worker_boot`
+# block.
+#
+# preload_app!
+
+# The code in the `on_worker_boot` will be called if you are using
+# clustered mode by specifying a number of `workers`. After each worker
+# process is booted this block will be run, if you are using `preload_app!`
+# option you will want to use this block to reconnect to any threads
+# or connections that may have been created at application boot, Ruby
+# cannot share connections between processes.
+#
+# on_worker_boot do
+#   ActiveRecord::Base.establish_connection if defined?(ActiveRecord)
+# end
+
+# Allow puma to be restarted by `rails restart` command.
+plugin :tmp_restart
diff --git a/hello_app/config/routes.rb b/hello_app/config/routes.rb
new file mode 100644
index 0000000..59d82c4
--- /dev/null
+++ b/hello_app/config/routes.rb
@@ -0,0 +1,5 @@
+Rails.application.routes.draw do
+  resources :microposts
+  resources :users
+  root 'users#index'
+end
diff --git a/hello_app/config/secrets.yml b/hello_app/config/secrets.yml
new file mode 100644
index 0000000..dd41e24
--- /dev/null
+++ b/hello_app/config/secrets.yml
@@ -0,0 +1,22 @@
+# Be sure to restart your server when you modify this file.
+
+# Your secret key is used for verifying the integrity of signed cookies.
+# If you change this key, all old signed cookies will become invalid!
+
+# Make sure the secret is at least 30 characters and all random,
+# no regular words or you'll be exposed to dictionary attacks.
+# You can use `rails secret` to generate a secure secret key.
+
+# Make sure the secrets in this file are kept private
+# if you're sharing your code publicly.
+
+development:
+  secret_key_base: 352720a0af0e5d7bf3d01e1c8aaedbcaa9859fdf6fbb904605ffde8f6821d4e0ca348a90c9e86c03a12c3736087ac0a23fc06c895dea4ac9755364ab5055771a
+
+test:
+  secret_key_base: 0d28a35d3e2a7b423daa75da798d3dca033a47fd04eec3a7c1b32cb3ed13569f73a7212a83a4c9a15575eaa8a2a7cd1c9d2475a6f914614e01d9b8a4cf12ba2c
+
+# Do not keep production secrets in the repository,
+# instead read values from the environment.
+production:
+  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>
diff --git a/hello_app/config/spring.rb b/hello_app/config/spring.rb
new file mode 100644
index 0000000..c9119b4
--- /dev/null
+++ b/hello_app/config/spring.rb
@@ -0,0 +1,6 @@
+%w(
+  .ruby-version
+  .rbenv-vars
+  tmp/restart.txt
+  tmp/caching-dev.txt
+).each { |path| Spring.watch(path) }
diff --git a/hello_app/db/migrate/20170210014751_create_users.rb b/hello_app/db/migrate/20170210014751_create_users.rb
new file mode 100644
index 0000000..7ed2370
--- /dev/null
+++ b/hello_app/db/migrate/20170210014751_create_users.rb
@@ -0,0 +1,10 @@
+class CreateUsers < ActiveRecord::Migration[5.0]
+  def change
+    create_table :users do |t|
+      t.string :name
+      t.string :email
+
+      t.timestamps
+    end
+  end
+end
diff --git a/hello_app/db/migrate/20170210085558_create_microposts.rb b/hello_app/db/migrate/20170210085558_create_microposts.rb
new file mode 100644
index 0000000..3927b4f
--- /dev/null
+++ b/hello_app/db/migrate/20170210085558_create_microposts.rb
@@ -0,0 +1,10 @@
+class CreateMicroposts < ActiveRecord::Migration[5.0]
+  def change
+    create_table :microposts do |t|
+      t.text :content
+      t.integer :user_id
+
+      t.timestamps
+    end
+  end
+end
diff --git a/hello_app/db/schema.rb b/hello_app/db/schema.rb
new file mode 100644
index 0000000..779a470
--- /dev/null
+++ b/hello_app/db/schema.rb
@@ -0,0 +1,29 @@
+# This file is auto-generated from the current state of the database. Instead
+# of editing this file, please use the migrations feature of Active Record to
+# incrementally modify your database, and then regenerate this schema definition.
+#
+# Note that this schema.rb definition is the authoritative source for your
+# database schema. If you need to create the application database on another
+# system, you should be using db:schema:load, not running all the migrations
+# from scratch. The latter is a flawed and unsustainable approach (the more migrations
+# you'll amass, the slower it'll run and the greater likelihood for issues).
+#
+# It's strongly recommended that you check this file into your version control system.
+
+ActiveRecord::Schema.define(version: 20170210085558) do
+
+  create_table "microposts", force: :cascade do |t|
+    t.text     "content"
+    t.integer  "user_id"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+  end
+
+  create_table "users", force: :cascade do |t|
+    t.string   "name"
+    t.string   "email"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+  end
+
+end
diff --git a/hello_app/db/seeds.rb b/hello_app/db/seeds.rb
new file mode 100644
index 0000000..1beea2a
--- /dev/null
+++ b/hello_app/db/seeds.rb
@@ -0,0 +1,7 @@
+# This file should contain all the record creation needed to seed the database with its default values.
+# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
+#
+# Examples:
+#
+#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
+#   Character.create(name: 'Luke', movie: movies.first)
diff --git a/hello_app/lib/assets/.keep b/hello_app/lib/assets/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/lib/tasks/.keep b/hello_app/lib/tasks/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/log/.keep b/hello_app/log/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/public/404.html b/hello_app/public/404.html
new file mode 100644
index 0000000..b612547
--- /dev/null
+++ b/hello_app/public/404.html
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>The page you were looking for doesn't exist (404)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/404.html -->
+  <div class="dialog">
+    <div>
+      <h1>The page you were looking for doesn't exist.</h1>
+      <p>You may have mistyped the address or the page may have moved.</p>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/hello_app/public/422.html b/hello_app/public/422.html
new file mode 100644
index 0000000..a21f82b
--- /dev/null
+++ b/hello_app/public/422.html
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>The change you wanted was rejected (422)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/422.html -->
+  <div class="dialog">
+    <div>
+      <h1>The change you wanted was rejected.</h1>
+      <p>Maybe you tried to change something you didn't have access to.</p>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/hello_app/public/500.html b/hello_app/public/500.html
new file mode 100644
index 0000000..061abc5
--- /dev/null
+++ b/hello_app/public/500.html
@@ -0,0 +1,66 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>We're sorry, but something went wrong (500)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/500.html -->
+  <div class="dialog">
+    <div>
+      <h1>We're sorry, but something went wrong.</h1>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/hello_app/public/apple-touch-icon-precomposed.png b/hello_app/public/apple-touch-icon-precomposed.png
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/public/apple-touch-icon.png b/hello_app/public/apple-touch-icon.png
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/public/favicon.ico b/hello_app/public/favicon.ico
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/public/robots.txt b/hello_app/public/robots.txt
new file mode 100644
index 0000000..3c9c7c0
--- /dev/null
+++ b/hello_app/public/robots.txt
@@ -0,0 +1,5 @@
+# See http://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file
+#
+# To ban all spiders from the entire site uncomment the next two lines:
+# User-agent: *
+# Disallow: /
diff --git a/hello_app/test/controllers/.keep b/hello_app/test/controllers/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/test/controllers/microposts_controller_test.rb b/hello_app/test/controllers/microposts_controller_test.rb
new file mode 100644
index 0000000..28e7230
--- /dev/null
+++ b/hello_app/test/controllers/microposts_controller_test.rb
@@ -0,0 +1,48 @@
+require 'test_helper'
+
+class MicropostsControllerTest < ActionDispatch::IntegrationTest
+  setup do
+    @micropost = microposts(:one)
+  end
+
+  test "should get index" do
+    get microposts_url
+    assert_response :success
+  end
+
+  test "should get new" do
+    get new_micropost_url
+    assert_response :success
+  end
+
+  test "should create micropost" do
+    assert_difference('Micropost.count') do
+      post microposts_url, params: { micropost: { content: @micropost.content, user_id: @micropost.user_id } }
+    end
+
+    assert_redirected_to micropost_url(Micropost.last)
+  end
+
+  test "should show micropost" do
+    get micropost_url(@micropost)
+    assert_response :success
+  end
+
+  test "should get edit" do
+    get edit_micropost_url(@micropost)
+    assert_response :success
+  end
+
+  test "should update micropost" do
+    patch micropost_url(@micropost), params: { micropost: { content: @micropost.content, user_id: @micropost.user_id } }
+    assert_redirected_to micropost_url(@micropost)
+  end
+
+  test "should destroy micropost" do
+    assert_difference('Micropost.count', -1) do
+      delete micropost_url(@micropost)
+    end
+
+    assert_redirected_to microposts_url
+  end
+end
diff --git a/hello_app/test/controllers/users_controller_test.rb b/hello_app/test/controllers/users_controller_test.rb
new file mode 100644
index 0000000..f45042b
--- /dev/null
+++ b/hello_app/test/controllers/users_controller_test.rb
@@ -0,0 +1,48 @@
+require 'test_helper'
+
+class UsersControllerTest < ActionDispatch::IntegrationTest
+  setup do
+    @user = users(:one)
+  end
+
+  test "should get index" do
+    get users_url
+    assert_response :success
+  end
+
+  test "should get new" do
+    get new_user_url
+    assert_response :success
+  end
+
+  test "should create user" do
+    assert_difference('User.count') do
+      post users_url, params: { user: { email: @user.email, name: @user.name } }
+    end
+
+    assert_redirected_to user_url(User.last)
+  end
+
+  test "should show user" do
+    get user_url(@user)
+    assert_response :success
+  end
+
+  test "should get edit" do
+    get edit_user_url(@user)
+    assert_response :success
+  end
+
+  test "should update user" do
+    patch user_url(@user), params: { user: { email: @user.email, name: @user.name } }
+    assert_redirected_to user_url(@user)
+  end
+
+  test "should destroy user" do
+    assert_difference('User.count', -1) do
+      delete user_url(@user)
+    end
+
+    assert_redirected_to users_url
+  end
+end
diff --git a/hello_app/test/fixtures/.keep b/hello_app/test/fixtures/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/test/fixtures/files/.keep b/hello_app/test/fixtures/files/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/test/fixtures/microposts.yml b/hello_app/test/fixtures/microposts.yml
new file mode 100644
index 0000000..dd68715
--- /dev/null
+++ b/hello_app/test/fixtures/microposts.yml
@@ -0,0 +1,9 @@
+# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  content: MyText
+  user_id: 1
+
+two:
+  content: MyText
+  user_id: 1
diff --git a/hello_app/test/fixtures/users.yml b/hello_app/test/fixtures/users.yml
new file mode 100644
index 0000000..5dc4ddf
--- /dev/null
+++ b/hello_app/test/fixtures/users.yml
@@ -0,0 +1,9 @@
+# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  name: MyString
+  email: MyString
+
+two:
+  name: MyString
+  email: MyString
diff --git a/hello_app/test/helpers/.keep b/hello_app/test/helpers/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/test/integration/.keep b/hello_app/test/integration/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/test/mailers/.keep b/hello_app/test/mailers/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/test/models/.keep b/hello_app/test/models/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/test/models/micropost_test.rb b/hello_app/test/models/micropost_test.rb
new file mode 100644
index 0000000..def8e93
--- /dev/null
+++ b/hello_app/test/models/micropost_test.rb
@@ -0,0 +1,7 @@
+require 'test_helper'
+
+class MicropostTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/hello_app/test/models/user_test.rb b/hello_app/test/models/user_test.rb
new file mode 100644
index 0000000..82f61e0
--- /dev/null
+++ b/hello_app/test/models/user_test.rb
@@ -0,0 +1,7 @@
+require 'test_helper'
+
+class UserTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/hello_app/test/test_helper.rb b/hello_app/test/test_helper.rb
new file mode 100644
index 0000000..92e39b2
--- /dev/null
+++ b/hello_app/test/test_helper.rb
@@ -0,0 +1,10 @@
+ENV['RAILS_ENV'] ||= 'test'
+require File.expand_path('../../config/environment', __FILE__)
+require 'rails/test_help'
+
+class ActiveSupport::TestCase
+  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
+  fixtures :all
+
+  # Add more helper methods to be used by all tests here...
+end
diff --git a/hello_app/tmp/.keep b/hello_app/tmp/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/vendor/assets/javascripts/.keep b/hello_app/vendor/assets/javascripts/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/hello_app/vendor/assets/stylesheets/.keep b/hello_app/vendor/assets/stylesheets/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/.gitignore b/sample_app/.gitignore
new file mode 100644
index 0000000..bab620d
--- /dev/null
+++ b/sample_app/.gitignore
@@ -0,0 +1,21 @@
+# See https://help.github.com/articles/ignoring-files for more about ignoring files.
+#
+# If you find yourself ignoring temporary files generated by your text editor
+# or operating system, you probably want to add a global ignore instead:
+#   git config --global core.excludesfile '~/.gitignore_global'
+
+# Ignore bundler config.
+/.bundle
+
+# Ignore the default SQLite database.
+/db/*.sqlite3
+/db/*.sqlite3-journal
+
+# Ignore all logfiles and tempfiles.
+/log/*
+/tmp/*
+!/log/.keep
+!/tmp/.keep
+
+# Ignore Byebug command history file.
+.byebug_history
diff --git a/sample_app/Gemfile b/sample_app/Gemfile
new file mode 100644
index 0000000..8d7b3eb
--- /dev/null
+++ b/sample_app/Gemfile
@@ -0,0 +1,53 @@
+source 'https://rubygems.org'
+
+git_source(:github) do |repo_name|
+  repo_name = "#{repo_name}/#{repo_name}" unless repo_name.include?("/")
+  "https://github.com/#{repo_name}.git"
+end
+
+
+# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
+gem 'rails', '~> 5.0.1'
+# Use sqlite3 as the database for Active Record
+gem 'sqlite3'
+# Use Puma as the app server
+gem 'puma', '~> 3.0'
+# Use SCSS for stylesheets
+gem 'sass-rails', '~> 5.0'
+# Use Uglifier as compressor for JavaScript assets
+gem 'uglifier', '>= 1.3.0'
+# Use CoffeeScript for .coffee assets and views
+gem 'coffee-rails', '~> 4.2'
+# See https://github.com/rails/execjs#readme for more supported runtimes
+# gem 'therubyracer', platforms: :ruby
+
+# Use jquery as the JavaScript library
+gem 'jquery-rails'
+# Turbolinks makes navigating your web application faster. Read more: https://github.com/turbolinks/turbolinks
+gem 'turbolinks', '~> 5'
+# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
+gem 'jbuilder', '~> 2.5'
+# Use Redis adapter to run Action Cable in production
+# gem 'redis', '~> 3.0'
+# Use ActiveModel has_secure_password
+# gem 'bcrypt', '~> 3.1.7'
+
+# Use Capistrano for deployment
+# gem 'capistrano-rails', group: :development
+
+group :development, :test do
+  # Call 'byebug' anywhere in the code to stop execution and get a debugger console
+  gem 'byebug', platform: :mri
+end
+
+group :development do
+  # Access an IRB console on exception pages or by using <%= console %> anywhere in the code.
+  gem 'web-console', '>= 3.3.0'
+  gem 'listen', '~> 3.0.5'
+  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
+  gem 'spring'
+  gem 'spring-watcher-listen', '~> 2.0.0'
+end
+
+# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
+gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
diff --git a/sample_app/Gemfile.lock b/sample_app/Gemfile.lock
new file mode 100644
index 0000000..c2cdeb3
--- /dev/null
+++ b/sample_app/Gemfile.lock
@@ -0,0 +1,174 @@
+GEM
+  remote: https://rubygems.org/
+  specs:
+    actioncable (5.0.1)
+      actionpack (= 5.0.1)
+      nio4r (~> 1.2)
+      websocket-driver (~> 0.6.1)
+    actionmailer (5.0.1)
+      actionpack (= 5.0.1)
+      actionview (= 5.0.1)
+      activejob (= 5.0.1)
+      mail (~> 2.5, >= 2.5.4)
+      rails-dom-testing (~> 2.0)
+    actionpack (5.0.1)
+      actionview (= 5.0.1)
+      activesupport (= 5.0.1)
+      rack (~> 2.0)
+      rack-test (~> 0.6.3)
+      rails-dom-testing (~> 2.0)
+      rails-html-sanitizer (~> 1.0, >= 1.0.2)
+    actionview (5.0.1)
+      activesupport (= 5.0.1)
+      builder (~> 3.1)
+      erubis (~> 2.7.0)
+      rails-dom-testing (~> 2.0)
+      rails-html-sanitizer (~> 1.0, >= 1.0.2)
+    activejob (5.0.1)
+      activesupport (= 5.0.1)
+      globalid (>= 0.3.6)
+    activemodel (5.0.1)
+      activesupport (= 5.0.1)
+    activerecord (5.0.1)
+      activemodel (= 5.0.1)
+      activesupport (= 5.0.1)
+      arel (~> 7.0)
+    activesupport (5.0.1)
+      concurrent-ruby (~> 1.0, >= 1.0.2)
+      i18n (~> 0.7)
+      minitest (~> 5.1)
+      tzinfo (~> 1.1)
+    arel (7.1.4)
+    builder (3.2.3)
+    byebug (9.0.6)
+    coffee-rails (4.2.1)
+      coffee-script (>= 2.2.0)
+      railties (>= 4.0.0, < 5.2.x)
+    coffee-script (2.4.1)
+      coffee-script-source
+      execjs
+    coffee-script-source (1.12.2)
+    concurrent-ruby (1.0.4)
+    debug_inspector (0.0.2)
+    erubis (2.7.0)
+    execjs (2.7.0)
+    ffi (1.9.17)
+    globalid (0.3.7)
+      activesupport (>= 4.1.0)
+    i18n (0.8.0)
+    jbuilder (2.6.1)
+      activesupport (>= 3.0.0, < 5.1)
+      multi_json (~> 1.2)
+    jquery-rails (4.2.2)
+      rails-dom-testing (>= 1, < 3)
+      railties (>= 4.2.0)
+      thor (>= 0.14, < 2.0)
+    listen (3.0.8)
+      rb-fsevent (~> 0.9, >= 0.9.4)
+      rb-inotify (~> 0.9, >= 0.9.7)
+    loofah (2.0.3)
+      nokogiri (>= 1.5.9)
+    mail (2.6.4)
+      mime-types (>= 1.16, < 4)
+    method_source (0.8.2)
+    mime-types (3.1)
+      mime-types-data (~> 3.2015)
+    mime-types-data (3.2016.0521)
+    mini_portile2 (2.1.0)
+    minitest (5.10.1)
+    multi_json (1.12.1)
+    nio4r (1.2.1)
+    nokogiri (1.7.0.1)
+      mini_portile2 (~> 2.1.0)
+    puma (3.7.0)
+    rack (2.0.1)
+    rack-test (0.6.3)
+      rack (>= 1.0)
+    rails (5.0.1)
+      actioncable (= 5.0.1)
+      actionmailer (= 5.0.1)
+      actionpack (= 5.0.1)
+      actionview (= 5.0.1)
+      activejob (= 5.0.1)
+      activemodel (= 5.0.1)
+      activerecord (= 5.0.1)
+      activesupport (= 5.0.1)
+      bundler (>= 1.3.0, < 2.0)
+      railties (= 5.0.1)
+      sprockets-rails (>= 2.0.0)
+    rails-dom-testing (2.0.2)
+      activesupport (>= 4.2.0, < 6.0)
+      nokogiri (~> 1.6)
+    rails-html-sanitizer (1.0.3)
+      loofah (~> 2.0)
+    railties (5.0.1)
+      actionpack (= 5.0.1)
+      activesupport (= 5.0.1)
+      method_source
+      rake (>= 0.8.7)
+      thor (>= 0.18.1, < 2.0)
+    rake (12.0.0)
+    rb-fsevent (0.9.8)
+    rb-inotify (0.9.8)
+      ffi (>= 0.5.0)
+    sass (3.4.23)
+    sass-rails (5.0.6)
+      railties (>= 4.0.0, < 6)
+      sass (~> 3.1)
+      sprockets (>= 2.8, < 4.0)
+      sprockets-rails (>= 2.0, < 4.0)
+      tilt (>= 1.1, < 3)
+    spring (2.0.1)
+      activesupport (>= 4.2)
+    spring-watcher-listen (2.0.1)
+      listen (>= 2.7, < 4.0)
+      spring (>= 1.2, < 3.0)
+    sprockets (3.7.1)
+      concurrent-ruby (~> 1.0)
+      rack (> 1, < 3)
+    sprockets-rails (3.2.0)
+      actionpack (>= 4.0)
+      activesupport (>= 4.0)
+      sprockets (>= 3.0.0)
+    sqlite3 (1.3.13)
+    thor (0.19.4)
+    thread_safe (0.3.5)
+    tilt (2.0.6)
+    turbolinks (5.0.1)
+      turbolinks-source (~> 5)
+    turbolinks-source (5.0.0)
+    tzinfo (1.2.2)
+      thread_safe (~> 0.1)
+    uglifier (3.0.4)
+      execjs (>= 0.3.0, < 3)
+    web-console (3.4.0)
+      actionview (>= 5.0)
+      activemodel (>= 5.0)
+      debug_inspector
+      railties (>= 5.0)
+    websocket-driver (0.6.5)
+      websocket-extensions (>= 0.1.0)
+    websocket-extensions (0.1.2)
+
+PLATFORMS
+  ruby
+
+DEPENDENCIES
+  byebug
+  coffee-rails (~> 4.2)
+  jbuilder (~> 2.5)
+  jquery-rails
+  listen (~> 3.0.5)
+  puma (~> 3.0)
+  rails (~> 5.0.1)
+  sass-rails (~> 5.0)
+  spring
+  spring-watcher-listen (~> 2.0.0)
+  sqlite3
+  turbolinks (~> 5)
+  tzinfo-data
+  uglifier (>= 1.3.0)
+  web-console (>= 3.3.0)
+
+BUNDLED WITH
+   1.14.3
diff --git a/sample_app/README.md b/sample_app/README.md
new file mode 100644
index 0000000..7db80e4
--- /dev/null
+++ b/sample_app/README.md
@@ -0,0 +1,24 @@
+# README
+
+This README would normally document whatever steps are necessary to get the
+application up and running.
+
+Things you may want to cover:
+
+* Ruby version
+
+* System dependencies
+
+* Configuration
+
+* Database creation
+
+* Database initialization
+
+* How to run the test suite
+
+* Services (job queues, cache servers, search engines, etc.)
+
+* Deployment instructions
+
+* ...
diff --git a/sample_app/Rakefile b/sample_app/Rakefile
new file mode 100644
index 0000000..e85f913
--- /dev/null
+++ b/sample_app/Rakefile
@@ -0,0 +1,6 @@
+# Add your own tasks in files placed in lib/tasks ending in .rake,
+# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.
+
+require_relative 'config/application'
+
+Rails.application.load_tasks
diff --git a/sample_app/app/assets/config/manifest.js b/sample_app/app/assets/config/manifest.js
new file mode 100644
index 0000000..b16e53d
--- /dev/null
+++ b/sample_app/app/assets/config/manifest.js
@@ -0,0 +1,3 @@
+//= link_tree ../images
+//= link_directory ../javascripts .js
+//= link_directory ../stylesheets .css
diff --git a/sample_app/app/assets/images/.keep b/sample_app/app/assets/images/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/app/assets/javascripts/application.js b/sample_app/app/assets/javascripts/application.js
new file mode 100644
index 0000000..b12018d
--- /dev/null
+++ b/sample_app/app/assets/javascripts/application.js
@@ -0,0 +1,16 @@
+// This is a manifest file that'll be compiled into application.js, which will include all the files
+// listed below.
+//
+// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
+// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
+//
+// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
+// compiled file. JavaScript code in this file should be added after the last require_* statement.
+//
+// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
+// about supported directives.
+//
+//= require jquery
+//= require jquery_ujs
+//= require turbolinks
+//= require_tree .
diff --git a/sample_app/app/assets/javascripts/cable.js b/sample_app/app/assets/javascripts/cable.js
new file mode 100644
index 0000000..71ee1e6
--- /dev/null
+++ b/sample_app/app/assets/javascripts/cable.js
@@ -0,0 +1,13 @@
+// Action Cable provides the framework to deal with WebSockets in Rails.
+// You can generate new channels where WebSocket features live using the rails generate channel command.
+//
+//= require action_cable
+//= require_self
+//= require_tree ./channels
+
+(function() {
+  this.App || (this.App = {});
+
+  App.cable = ActionCable.createConsumer();
+
+}).call(this);
diff --git a/sample_app/app/assets/javascripts/channels/.keep b/sample_app/app/assets/javascripts/channels/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/app/assets/stylesheets/application.css b/sample_app/app/assets/stylesheets/application.css
new file mode 100644
index 0000000..0ebd7fe
--- /dev/null
+++ b/sample_app/app/assets/stylesheets/application.css
@@ -0,0 +1,15 @@
+/*
+ * This is a manifest file that'll be compiled into application.css, which will include all the files
+ * listed below.
+ *
+ * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
+ * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
+ *
+ * You're free to add application-wide styles to this file and they'll appear at the bottom of the
+ * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
+ * files in this directory. Styles in this file should be added after the last require_* statement.
+ * It is generally better to create a new file per style scope.
+ *
+ *= require_tree .
+ *= require_self
+ */
diff --git a/sample_app/app/channels/application_cable/channel.rb b/sample_app/app/channels/application_cable/channel.rb
new file mode 100644
index 0000000..d672697
--- /dev/null
+++ b/sample_app/app/channels/application_cable/channel.rb
@@ -0,0 +1,4 @@
+module ApplicationCable
+  class Channel < ActionCable::Channel::Base
+  end
+end
diff --git a/sample_app/app/channels/application_cable/connection.rb b/sample_app/app/channels/application_cable/connection.rb
new file mode 100644
index 0000000..0ff5442
--- /dev/null
+++ b/sample_app/app/channels/application_cable/connection.rb
@@ -0,0 +1,4 @@
+module ApplicationCable
+  class Connection < ActionCable::Connection::Base
+  end
+end
diff --git a/sample_app/app/controllers/application_controller.rb b/sample_app/app/controllers/application_controller.rb
new file mode 100644
index 0000000..1c07694
--- /dev/null
+++ b/sample_app/app/controllers/application_controller.rb
@@ -0,0 +1,3 @@
+class ApplicationController < ActionController::Base
+  protect_from_forgery with: :exception
+end
diff --git a/sample_app/app/controllers/concerns/.keep b/sample_app/app/controllers/concerns/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/app/helpers/application_helper.rb b/sample_app/app/helpers/application_helper.rb
new file mode 100644
index 0000000..de6be79
--- /dev/null
+++ b/sample_app/app/helpers/application_helper.rb
@@ -0,0 +1,2 @@
+module ApplicationHelper
+end
diff --git a/sample_app/app/jobs/application_job.rb b/sample_app/app/jobs/application_job.rb
new file mode 100644
index 0000000..a009ace
--- /dev/null
+++ b/sample_app/app/jobs/application_job.rb
@@ -0,0 +1,2 @@
+class ApplicationJob < ActiveJob::Base
+end
diff --git a/sample_app/app/mailers/application_mailer.rb b/sample_app/app/mailers/application_mailer.rb
new file mode 100644
index 0000000..286b223
--- /dev/null
+++ b/sample_app/app/mailers/application_mailer.rb
@@ -0,0 +1,4 @@
+class ApplicationMailer < ActionMailer::Base
+  default from: 'from@example.com'
+  layout 'mailer'
+end
diff --git a/sample_app/app/models/application_record.rb b/sample_app/app/models/application_record.rb
new file mode 100644
index 0000000..10a4cba
--- /dev/null
+++ b/sample_app/app/models/application_record.rb
@@ -0,0 +1,3 @@
+class ApplicationRecord < ActiveRecord::Base
+  self.abstract_class = true
+end
diff --git a/sample_app/app/models/concerns/.keep b/sample_app/app/models/concerns/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/app/views/layouts/application.html.erb b/sample_app/app/views/layouts/application.html.erb
new file mode 100644
index 0000000..f4949f6
--- /dev/null
+++ b/sample_app/app/views/layouts/application.html.erb
@@ -0,0 +1,14 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <title>SampleApp</title>
+    <%= csrf_meta_tags %>
+
+    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
+    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
+  </head>
+
+  <body>
+    <%= yield %>
+  </body>
+</html>
diff --git a/sample_app/app/views/layouts/mailer.html.erb b/sample_app/app/views/layouts/mailer.html.erb
new file mode 100644
index 0000000..cbd34d2
--- /dev/null
+++ b/sample_app/app/views/layouts/mailer.html.erb
@@ -0,0 +1,13 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
+    <style>
+      /* Email styles need to be inline */
+    </style>
+  </head>
+
+  <body>
+    <%= yield %>
+  </body>
+</html>
diff --git a/sample_app/app/views/layouts/mailer.text.erb b/sample_app/app/views/layouts/mailer.text.erb
new file mode 100644
index 0000000..37f0bdd
--- /dev/null
+++ b/sample_app/app/views/layouts/mailer.text.erb
@@ -0,0 +1 @@
+<%= yield %>
diff --git a/sample_app/bin/bundle b/sample_app/bin/bundle
new file mode 100755
index 0000000..66e9889
--- /dev/null
+++ b/sample_app/bin/bundle
@@ -0,0 +1,3 @@
+#!/usr/bin/env ruby
+ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
+load Gem.bin_path('bundler', 'bundle')
diff --git a/sample_app/bin/rails b/sample_app/bin/rails
new file mode 100755
index 0000000..5badb2f
--- /dev/null
+++ b/sample_app/bin/rails
@@ -0,0 +1,9 @@
+#!/usr/bin/env ruby
+begin
+  load File.expand_path('../spring', __FILE__)
+rescue LoadError => e
+  raise unless e.message.include?('spring')
+end
+APP_PATH = File.expand_path('../config/application', __dir__)
+require_relative '../config/boot'
+require 'rails/commands'
diff --git a/sample_app/bin/rake b/sample_app/bin/rake
new file mode 100755
index 0000000..d87d5f5
--- /dev/null
+++ b/sample_app/bin/rake
@@ -0,0 +1,9 @@
+#!/usr/bin/env ruby
+begin
+  load File.expand_path('../spring', __FILE__)
+rescue LoadError => e
+  raise unless e.message.include?('spring')
+end
+require_relative '../config/boot'
+require 'rake'
+Rake.application.run
diff --git a/sample_app/bin/setup b/sample_app/bin/setup
new file mode 100755
index 0000000..e620b4d
--- /dev/null
+++ b/sample_app/bin/setup
@@ -0,0 +1,34 @@
+#!/usr/bin/env ruby
+require 'pathname'
+require 'fileutils'
+include FileUtils
+
+# path to your application root.
+APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)
+
+def system!(*args)
+  system(*args) || abort("\n== Command #{args} failed ==")
+end
+
+chdir APP_ROOT do
+  # This script is a starting point to setup your application.
+  # Add necessary setup steps to this file.
+
+  puts '== Installing dependencies =='
+  system! 'gem install bundler --conservative'
+  system('bundle check') || system!('bundle install')
+
+  # puts "\n== Copying sample files =="
+  # unless File.exist?('config/database.yml')
+  #   cp 'config/database.yml.sample', 'config/database.yml'
+  # end
+
+  puts "\n== Preparing database =="
+  system! 'bin/rails db:setup'
+
+  puts "\n== Removing old logs and tempfiles =="
+  system! 'bin/rails log:clear tmp:clear'
+
+  puts "\n== Restarting application server =="
+  system! 'bin/rails restart'
+end
diff --git a/sample_app/bin/spring b/sample_app/bin/spring
new file mode 100755
index 0000000..fb2ec2e
--- /dev/null
+++ b/sample_app/bin/spring
@@ -0,0 +1,17 @@
+#!/usr/bin/env ruby
+
+# This file loads spring without using Bundler, in order to be fast.
+# It gets overwritten when you run the `spring binstub` command.
+
+unless defined?(Spring)
+  require 'rubygems'
+  require 'bundler'
+
+  lockfile = Bundler::LockfileParser.new(Bundler.default_lockfile.read)
+  spring = lockfile.specs.detect { |spec| spec.name == "spring" }
+  if spring
+    Gem.use_paths Gem.dir, Bundler.bundle_path.to_s, *Gem.path
+    gem 'spring', spring.version
+    require 'spring/binstub'
+  end
+end
diff --git a/sample_app/bin/update b/sample_app/bin/update
new file mode 100755
index 0000000..a8e4462
--- /dev/null
+++ b/sample_app/bin/update
@@ -0,0 +1,29 @@
+#!/usr/bin/env ruby
+require 'pathname'
+require 'fileutils'
+include FileUtils
+
+# path to your application root.
+APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)
+
+def system!(*args)
+  system(*args) || abort("\n== Command #{args} failed ==")
+end
+
+chdir APP_ROOT do
+  # This script is a way to update your development environment automatically.
+  # Add necessary update steps to this file.
+
+  puts '== Installing dependencies =='
+  system! 'gem install bundler --conservative'
+  system('bundle check') || system!('bundle install')
+
+  puts "\n== Updating database =="
+  system! 'bin/rails db:migrate'
+
+  puts "\n== Removing old logs and tempfiles =="
+  system! 'bin/rails log:clear tmp:clear'
+
+  puts "\n== Restarting application server =="
+  system! 'bin/rails restart'
+end
diff --git a/sample_app/config.ru b/sample_app/config.ru
new file mode 100644
index 0000000..f7ba0b5
--- /dev/null
+++ b/sample_app/config.ru
@@ -0,0 +1,5 @@
+# This file is used by Rack-based servers to start the application.
+
+require_relative 'config/environment'
+
+run Rails.application
diff --git a/sample_app/config/application.rb b/sample_app/config/application.rb
new file mode 100644
index 0000000..4b92804
--- /dev/null
+++ b/sample_app/config/application.rb
@@ -0,0 +1,15 @@
+require_relative 'boot'
+
+require 'rails/all'
+
+# Require the gems listed in Gemfile, including any gems
+# you've limited to :test, :development, or :production.
+Bundler.require(*Rails.groups)
+
+module SampleApp
+  class Application < Rails::Application
+    # Settings in config/environments/* take precedence over those specified here.
+    # Application configuration should go into files in config/initializers
+    # -- all .rb files in that directory are automatically loaded.
+  end
+end
diff --git a/sample_app/config/boot.rb b/sample_app/config/boot.rb
new file mode 100644
index 0000000..30f5120
--- /dev/null
+++ b/sample_app/config/boot.rb
@@ -0,0 +1,3 @@
+ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
+
+require 'bundler/setup' # Set up gems listed in the Gemfile.
diff --git a/sample_app/config/cable.yml b/sample_app/config/cable.yml
new file mode 100644
index 0000000..0bbde6f
--- /dev/null
+++ b/sample_app/config/cable.yml
@@ -0,0 +1,9 @@
+development:
+  adapter: async
+
+test:
+  adapter: async
+
+production:
+  adapter: redis
+  url: redis://localhost:6379/1
diff --git a/sample_app/config/database.yml b/sample_app/config/database.yml
new file mode 100644
index 0000000..1c1a37c
--- /dev/null
+++ b/sample_app/config/database.yml
@@ -0,0 +1,25 @@
+# SQLite version 3.x
+#   gem install sqlite3
+#
+#   Ensure the SQLite 3 gem is defined in your Gemfile
+#   gem 'sqlite3'
+#
+default: &default
+  adapter: sqlite3
+  pool: 5
+  timeout: 5000
+
+development:
+  <<: *default
+  database: db/development.sqlite3
+
+# Warning: The database defined as "test" will be erased and
+# re-generated from your development database when you run "rake".
+# Do not set this db to the same as development or production.
+test:
+  <<: *default
+  database: db/test.sqlite3
+
+production:
+  <<: *default
+  database: db/production.sqlite3
diff --git a/sample_app/config/environment.rb b/sample_app/config/environment.rb
new file mode 100644
index 0000000..426333b
--- /dev/null
+++ b/sample_app/config/environment.rb
@@ -0,0 +1,5 @@
+# Load the Rails application.
+require_relative 'application'
+
+# Initialize the Rails application.
+Rails.application.initialize!
diff --git a/sample_app/config/environments/development.rb b/sample_app/config/environments/development.rb
new file mode 100644
index 0000000..6f71970
--- /dev/null
+++ b/sample_app/config/environments/development.rb
@@ -0,0 +1,54 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # In the development environment your application's code is reloaded on
+  # every request. This slows down response time but is perfect for development
+  # since you don't have to restart the web server when you make code changes.
+  config.cache_classes = false
+
+  # Do not eager load code on boot.
+  config.eager_load = false
+
+  # Show full error reports.
+  config.consider_all_requests_local = true
+
+  # Enable/disable caching. By default caching is disabled.
+  if Rails.root.join('tmp/caching-dev.txt').exist?
+    config.action_controller.perform_caching = true
+
+    config.cache_store = :memory_store
+    config.public_file_server.headers = {
+      'Cache-Control' => 'public, max-age=172800'
+    }
+  else
+    config.action_controller.perform_caching = false
+
+    config.cache_store = :null_store
+  end
+
+  # Don't care if the mailer can't send.
+  config.action_mailer.raise_delivery_errors = false
+
+  config.action_mailer.perform_caching = false
+
+  # Print deprecation notices to the Rails logger.
+  config.active_support.deprecation = :log
+
+  # Raise an error on page load if there are pending migrations.
+  config.active_record.migration_error = :page_load
+
+  # Debug mode disables concatenation and preprocessing of assets.
+  # This option may cause significant delays in view rendering with a large
+  # number of complex assets.
+  config.assets.debug = true
+
+  # Suppress logger output for asset requests.
+  config.assets.quiet = true
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
+
+  # Use an evented file watcher to asynchronously detect changes in source code,
+  # routes, locales, etc. This feature depends on the listen gem.
+  config.file_watcher = ActiveSupport::EventedFileUpdateChecker
+end
diff --git a/sample_app/config/environments/production.rb b/sample_app/config/environments/production.rb
new file mode 100644
index 0000000..031aa9c
--- /dev/null
+++ b/sample_app/config/environments/production.rb
@@ -0,0 +1,86 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # Code is not reloaded between requests.
+  config.cache_classes = true
+
+  # Eager load code on boot. This eager loads most of Rails and
+  # your application in memory, allowing both threaded web servers
+  # and those relying on copy on write to perform better.
+  # Rake tasks automatically ignore this option for performance.
+  config.eager_load = true
+
+  # Full error reports are disabled and caching is turned on.
+  config.consider_all_requests_local       = false
+  config.action_controller.perform_caching = true
+
+  # Disable serving static files from the `/public` folder by default since
+  # Apache or NGINX already handles this.
+  config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present?
+
+  # Compress JavaScripts and CSS.
+  config.assets.js_compressor = :uglifier
+  # config.assets.css_compressor = :sass
+
+  # Do not fallback to assets pipeline if a precompiled asset is missed.
+  config.assets.compile = false
+
+  # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb
+
+  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
+  # config.action_controller.asset_host = 'http://assets.example.com'
+
+  # Specifies the header that your server uses for sending files.
+  # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache
+  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX
+
+  # Mount Action Cable outside main process or domain
+  # config.action_cable.mount_path = nil
+  # config.action_cable.url = 'wss://example.com/cable'
+  # config.action_cable.allowed_request_origins = [ 'http://example.com', /http:\/\/example.*/ ]
+
+  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
+  # config.force_ssl = true
+
+  # Use the lowest log level to ensure availability of diagnostic information
+  # when problems arise.
+  config.log_level = :debug
+
+  # Prepend all log lines with the following tags.
+  config.log_tags = [ :request_id ]
+
+  # Use a different cache store in production.
+  # config.cache_store = :mem_cache_store
+
+  # Use a real queuing backend for Active Job (and separate queues per environment)
+  # config.active_job.queue_adapter     = :resque
+  # config.active_job.queue_name_prefix = "sample_app_#{Rails.env}"
+  config.action_mailer.perform_caching = false
+
+  # Ignore bad email addresses and do not raise email delivery errors.
+  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
+  # config.action_mailer.raise_delivery_errors = false
+
+  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
+  # the I18n.default_locale when a translation cannot be found).
+  config.i18n.fallbacks = true
+
+  # Send deprecation notices to registered listeners.
+  config.active_support.deprecation = :notify
+
+  # Use default logging formatter so that PID and timestamp are not suppressed.
+  config.log_formatter = ::Logger::Formatter.new
+
+  # Use a different logger for distributed setups.
+  # require 'syslog/logger'
+  # config.logger = ActiveSupport::TaggedLogging.new(Syslog::Logger.new 'app-name')
+
+  if ENV["RAILS_LOG_TO_STDOUT"].present?
+    logger           = ActiveSupport::Logger.new(STDOUT)
+    logger.formatter = config.log_formatter
+    config.logger = ActiveSupport::TaggedLogging.new(logger)
+  end
+
+  # Do not dump schema after migrations.
+  config.active_record.dump_schema_after_migration = false
+end
diff --git a/sample_app/config/environments/test.rb b/sample_app/config/environments/test.rb
new file mode 100644
index 0000000..30587ef
--- /dev/null
+++ b/sample_app/config/environments/test.rb
@@ -0,0 +1,42 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # The test environment is used exclusively to run your application's
+  # test suite. You never need to work with it otherwise. Remember that
+  # your test database is "scratch space" for the test suite and is wiped
+  # and recreated between test runs. Don't rely on the data there!
+  config.cache_classes = true
+
+  # Do not eager load code on boot. This avoids loading your whole application
+  # just for the purpose of running a single test. If you are using a tool that
+  # preloads Rails for running tests, you may have to set it to true.
+  config.eager_load = false
+
+  # Configure public file server for tests with Cache-Control for performance.
+  config.public_file_server.enabled = true
+  config.public_file_server.headers = {
+    'Cache-Control' => 'public, max-age=3600'
+  }
+
+  # Show full error reports and disable caching.
+  config.consider_all_requests_local       = true
+  config.action_controller.perform_caching = false
+
+  # Raise exceptions instead of rendering exception templates.
+  config.action_dispatch.show_exceptions = false
+
+  # Disable request forgery protection in test environment.
+  config.action_controller.allow_forgery_protection = false
+  config.action_mailer.perform_caching = false
+
+  # Tell Action Mailer not to deliver emails to the real world.
+  # The :test delivery method accumulates sent emails in the
+  # ActionMailer::Base.deliveries array.
+  config.action_mailer.delivery_method = :test
+
+  # Print deprecation notices to the stderr.
+  config.active_support.deprecation = :stderr
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
+end
diff --git a/sample_app/config/initializers/application_controller_renderer.rb b/sample_app/config/initializers/application_controller_renderer.rb
new file mode 100644
index 0000000..51639b6
--- /dev/null
+++ b/sample_app/config/initializers/application_controller_renderer.rb
@@ -0,0 +1,6 @@
+# Be sure to restart your server when you modify this file.
+
+# ApplicationController.renderer.defaults.merge!(
+#   http_host: 'example.org',
+#   https: false
+# )
diff --git a/sample_app/config/initializers/assets.rb b/sample_app/config/initializers/assets.rb
new file mode 100644
index 0000000..01ef3e6
--- /dev/null
+++ b/sample_app/config/initializers/assets.rb
@@ -0,0 +1,11 @@
+# Be sure to restart your server when you modify this file.
+
+# Version of your assets, change this if you want to expire all your assets.
+Rails.application.config.assets.version = '1.0'
+
+# Add additional assets to the asset load path
+# Rails.application.config.assets.paths << Emoji.images_path
+
+# Precompile additional assets.
+# application.js, application.css, and all non-JS/CSS in app/assets folder are already added.
+# Rails.application.config.assets.precompile += %w( search.js )
diff --git a/sample_app/config/initializers/backtrace_silencers.rb b/sample_app/config/initializers/backtrace_silencers.rb
new file mode 100644
index 0000000..59385cd
--- /dev/null
+++ b/sample_app/config/initializers/backtrace_silencers.rb
@@ -0,0 +1,7 @@
+# Be sure to restart your server when you modify this file.
+
+# You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
+# Rails.backtrace_cleaner.add_silencer { |line| line =~ /my_noisy_library/ }
+
+# You can also remove all the silencers if you're trying to debug a problem that might stem from framework code.
+# Rails.backtrace_cleaner.remove_silencers!
diff --git a/sample_app/config/initializers/cookies_serializer.rb b/sample_app/config/initializers/cookies_serializer.rb
new file mode 100644
index 0000000..5a6a32d
--- /dev/null
+++ b/sample_app/config/initializers/cookies_serializer.rb
@@ -0,0 +1,5 @@
+# Be sure to restart your server when you modify this file.
+
+# Specify a serializer for the signed and encrypted cookie jars.
+# Valid options are :json, :marshal, and :hybrid.
+Rails.application.config.action_dispatch.cookies_serializer = :json
diff --git a/sample_app/config/initializers/filter_parameter_logging.rb b/sample_app/config/initializers/filter_parameter_logging.rb
new file mode 100644
index 0000000..4a994e1
--- /dev/null
+++ b/sample_app/config/initializers/filter_parameter_logging.rb
@@ -0,0 +1,4 @@
+# Be sure to restart your server when you modify this file.
+
+# Configure sensitive parameters which will be filtered from the log file.
+Rails.application.config.filter_parameters += [:password]
diff --git a/sample_app/config/initializers/inflections.rb b/sample_app/config/initializers/inflections.rb
new file mode 100644
index 0000000..ac033bf
--- /dev/null
+++ b/sample_app/config/initializers/inflections.rb
@@ -0,0 +1,16 @@
+# Be sure to restart your server when you modify this file.
+
+# Add new inflection rules using the following format. Inflections
+# are locale specific, and you may define rules for as many different
+# locales as you wish. All of these examples are active by default:
+# ActiveSupport::Inflector.inflections(:en) do |inflect|
+#   inflect.plural /^(ox)$/i, '\1en'
+#   inflect.singular /^(ox)en/i, '\1'
+#   inflect.irregular 'person', 'people'
+#   inflect.uncountable %w( fish sheep )
+# end
+
+# These inflection rules are supported but not enabled by default:
+# ActiveSupport::Inflector.inflections(:en) do |inflect|
+#   inflect.acronym 'RESTful'
+# end
diff --git a/sample_app/config/initializers/mime_types.rb b/sample_app/config/initializers/mime_types.rb
new file mode 100644
index 0000000..dc18996
--- /dev/null
+++ b/sample_app/config/initializers/mime_types.rb
@@ -0,0 +1,4 @@
+# Be sure to restart your server when you modify this file.
+
+# Add new mime types for use in respond_to blocks:
+# Mime::Type.register "text/richtext", :rtf
diff --git a/sample_app/config/initializers/new_framework_defaults.rb b/sample_app/config/initializers/new_framework_defaults.rb
new file mode 100644
index 0000000..671abb6
--- /dev/null
+++ b/sample_app/config/initializers/new_framework_defaults.rb
@@ -0,0 +1,24 @@
+# Be sure to restart your server when you modify this file.
+#
+# This file contains migration options to ease your Rails 5.0 upgrade.
+#
+# Read the Guide for Upgrading Ruby on Rails for more info on each option.
+
+# Enable per-form CSRF tokens. Previous versions had false.
+Rails.application.config.action_controller.per_form_csrf_tokens = true
+
+# Enable origin-checking CSRF mitigation. Previous versions had false.
+Rails.application.config.action_controller.forgery_protection_origin_check = true
+
+# Make Ruby 2.4 preserve the timezone of the receiver when calling `to_time`.
+# Previous versions had false.
+ActiveSupport.to_time_preserves_timezone = true
+
+# Require `belongs_to` associations by default. Previous versions had false.
+Rails.application.config.active_record.belongs_to_required_by_default = true
+
+# Do not halt callback chains when a callback returns false. Previous versions had true.
+ActiveSupport.halt_callback_chains_on_return_false = false
+
+# Configure SSL options to enable HSTS with subdomains. Previous versions had false.
+Rails.application.config.ssl_options = { hsts: { subdomains: true } }
diff --git a/sample_app/config/initializers/session_store.rb b/sample_app/config/initializers/session_store.rb
new file mode 100644
index 0000000..2248862
--- /dev/null
+++ b/sample_app/config/initializers/session_store.rb
@@ -0,0 +1,3 @@
+# Be sure to restart your server when you modify this file.
+
+Rails.application.config.session_store :cookie_store, key: '_sample_app_session'
diff --git a/sample_app/config/initializers/wrap_parameters.rb b/sample_app/config/initializers/wrap_parameters.rb
new file mode 100644
index 0000000..bbfc396
--- /dev/null
+++ b/sample_app/config/initializers/wrap_parameters.rb
@@ -0,0 +1,14 @@
+# Be sure to restart your server when you modify this file.
+
+# This file contains settings for ActionController::ParamsWrapper which
+# is enabled by default.
+
+# Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.
+ActiveSupport.on_load(:action_controller) do
+  wrap_parameters format: [:json]
+end
+
+# To enable root element in JSON for ActiveRecord objects.
+# ActiveSupport.on_load(:active_record) do
+#   self.include_root_in_json = true
+# end
diff --git a/sample_app/config/locales/en.yml b/sample_app/config/locales/en.yml
new file mode 100644
index 0000000..0653957
--- /dev/null
+++ b/sample_app/config/locales/en.yml
@@ -0,0 +1,23 @@
+# Files in the config/locales directory are used for internationalization
+# and are automatically loaded by Rails. If you want to use locales other
+# than English, add the necessary files in this directory.
+#
+# To use the locales, use `I18n.t`:
+#
+#     I18n.t 'hello'
+#
+# In views, this is aliased to just `t`:
+#
+#     <%= t('hello') %>
+#
+# To use a different locale, set it with `I18n.locale`:
+#
+#     I18n.locale = :es
+#
+# This would use the information in config/locales/es.yml.
+#
+# To learn more, please read the Rails Internationalization guide
+# available at http://guides.rubyonrails.org/i18n.html.
+
+en:
+  hello: "Hello world"
diff --git a/sample_app/config/puma.rb b/sample_app/config/puma.rb
new file mode 100644
index 0000000..c7f311f
--- /dev/null
+++ b/sample_app/config/puma.rb
@@ -0,0 +1,47 @@
+# Puma can serve each request in a thread from an internal thread pool.
+# The `threads` method setting takes two numbers a minimum and maximum.
+# Any libraries that use thread pools should be configured to match
+# the maximum value specified for Puma. Default is set to 5 threads for minimum
+# and maximum, this matches the default thread size of Active Record.
+#
+threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }.to_i
+threads threads_count, threads_count
+
+# Specifies the `port` that Puma will listen on to receive requests, default is 3000.
+#
+port        ENV.fetch("PORT") { 3000 }
+
+# Specifies the `environment` that Puma will run in.
+#
+environment ENV.fetch("RAILS_ENV") { "development" }
+
+# Specifies the number of `workers` to boot in clustered mode.
+# Workers are forked webserver processes. If using threads and workers together
+# the concurrency of the application would be max `threads` * `workers`.
+# Workers do not work on JRuby or Windows (both of which do not support
+# processes).
+#
+# workers ENV.fetch("WEB_CONCURRENCY") { 2 }
+
+# Use the `preload_app!` method when specifying a `workers` number.
+# This directive tells Puma to first boot the application and load code
+# before forking the application. This takes advantage of Copy On Write
+# process behavior so workers use less memory. If you use this option
+# you need to make sure to reconnect any threads in the `on_worker_boot`
+# block.
+#
+# preload_app!
+
+# The code in the `on_worker_boot` will be called if you are using
+# clustered mode by specifying a number of `workers`. After each worker
+# process is booted this block will be run, if you are using `preload_app!`
+# option you will want to use this block to reconnect to any threads
+# or connections that may have been created at application boot, Ruby
+# cannot share connections between processes.
+#
+# on_worker_boot do
+#   ActiveRecord::Base.establish_connection if defined?(ActiveRecord)
+# end
+
+# Allow puma to be restarted by `rails restart` command.
+plugin :tmp_restart
diff --git a/sample_app/config/routes.rb b/sample_app/config/routes.rb
new file mode 100644
index 0000000..787824f
--- /dev/null
+++ b/sample_app/config/routes.rb
@@ -0,0 +1,3 @@
+Rails.application.routes.draw do
+  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
+end
diff --git a/sample_app/config/secrets.yml b/sample_app/config/secrets.yml
new file mode 100644
index 0000000..113ecde
--- /dev/null
+++ b/sample_app/config/secrets.yml
@@ -0,0 +1,22 @@
+# Be sure to restart your server when you modify this file.
+
+# Your secret key is used for verifying the integrity of signed cookies.
+# If you change this key, all old signed cookies will become invalid!
+
+# Make sure the secret is at least 30 characters and all random,
+# no regular words or you'll be exposed to dictionary attacks.
+# You can use `rails secret` to generate a secure secret key.
+
+# Make sure the secrets in this file are kept private
+# if you're sharing your code publicly.
+
+development:
+  secret_key_base: 0af896ba87ea377e7bae06c6de0ace7f45cf794d7e019f7290a1804fdac5721b9e23659ef5a3ee7aa0a74fd481c784115cac1b0b921c88c844ce5670ded66e84
+
+test:
+  secret_key_base: f5224041ab6a4a70976e1b1680215d1801a4433b9d39dbcd627390040b69303c8166fac11281fa3ee2e020d440233be86619c58f1104164e0b034f1bee5596e0
+
+# Do not keep production secrets in the repository,
+# instead read values from the environment.
+production:
+  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>
diff --git a/sample_app/config/spring.rb b/sample_app/config/spring.rb
new file mode 100644
index 0000000..c9119b4
--- /dev/null
+++ b/sample_app/config/spring.rb
@@ -0,0 +1,6 @@
+%w(
+  .ruby-version
+  .rbenv-vars
+  tmp/restart.txt
+  tmp/caching-dev.txt
+).each { |path| Spring.watch(path) }
diff --git a/sample_app/db/seeds.rb b/sample_app/db/seeds.rb
new file mode 100644
index 0000000..1beea2a
--- /dev/null
+++ b/sample_app/db/seeds.rb
@@ -0,0 +1,7 @@
+# This file should contain all the record creation needed to seed the database with its default values.
+# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
+#
+# Examples:
+#
+#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
+#   Character.create(name: 'Luke', movie: movies.first)
diff --git a/sample_app/lib/assets/.keep b/sample_app/lib/assets/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/lib/tasks/.keep b/sample_app/lib/tasks/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/log/.keep b/sample_app/log/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/public/404.html b/sample_app/public/404.html
new file mode 100644
index 0000000..b612547
--- /dev/null
+++ b/sample_app/public/404.html
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>The page you were looking for doesn't exist (404)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/404.html -->
+  <div class="dialog">
+    <div>
+      <h1>The page you were looking for doesn't exist.</h1>
+      <p>You may have mistyped the address or the page may have moved.</p>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/sample_app/public/422.html b/sample_app/public/422.html
new file mode 100644
index 0000000..a21f82b
--- /dev/null
+++ b/sample_app/public/422.html
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>The change you wanted was rejected (422)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/422.html -->
+  <div class="dialog">
+    <div>
+      <h1>The change you wanted was rejected.</h1>
+      <p>Maybe you tried to change something you didn't have access to.</p>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/sample_app/public/500.html b/sample_app/public/500.html
new file mode 100644
index 0000000..061abc5
--- /dev/null
+++ b/sample_app/public/500.html
@@ -0,0 +1,66 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>We're sorry, but something went wrong (500)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/500.html -->
+  <div class="dialog">
+    <div>
+      <h1>We're sorry, but something went wrong.</h1>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/sample_app/public/apple-touch-icon-precomposed.png b/sample_app/public/apple-touch-icon-precomposed.png
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/public/apple-touch-icon.png b/sample_app/public/apple-touch-icon.png
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/public/favicon.ico b/sample_app/public/favicon.ico
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/public/robots.txt b/sample_app/public/robots.txt
new file mode 100644
index 0000000..3c9c7c0
--- /dev/null
+++ b/sample_app/public/robots.txt
@@ -0,0 +1,5 @@
+# See http://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file
+#
+# To ban all spiders from the entire site uncomment the next two lines:
+# User-agent: *
+# Disallow: /
diff --git a/sample_app/test/controllers/.keep b/sample_app/test/controllers/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/test/fixtures/.keep b/sample_app/test/fixtures/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/test/fixtures/files/.keep b/sample_app/test/fixtures/files/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/test/helpers/.keep b/sample_app/test/helpers/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/test/integration/.keep b/sample_app/test/integration/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/test/mailers/.keep b/sample_app/test/mailers/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/test/models/.keep b/sample_app/test/models/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/test/test_helper.rb b/sample_app/test/test_helper.rb
new file mode 100644
index 0000000..92e39b2
--- /dev/null
+++ b/sample_app/test/test_helper.rb
@@ -0,0 +1,10 @@
+ENV['RAILS_ENV'] ||= 'test'
+require File.expand_path('../../config/environment', __FILE__)
+require 'rails/test_help'
+
+class ActiveSupport::TestCase
+  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
+  fixtures :all
+
+  # Add more helper methods to be used by all tests here...
+end
diff --git a/sample_app/tmp/.keep b/sample_app/tmp/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/vendor/assets/javascripts/.keep b/sample_app/vendor/assets/javascripts/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/sample_app/vendor/assets/stylesheets/.keep b/sample_app/vendor/assets/stylesheets/.keep
new file mode 100644
index 0000000..e69de29
